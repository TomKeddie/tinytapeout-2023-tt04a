
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27+22 (git sha1 53c0a6b78, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `top_icebreaker.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top_icebreaker.v
Parsing Verilog input from `top_icebreaker.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Parsing `led_panel_single.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: led_panel_single.v
Parsing Verilog input from `led_panel_single.v' to AST representation.
Storing AST representation for module `$abstract\led_panel_single'.
Successfully finished Verilog frontend.

-- Parsing `uart_rx.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: uart_rx.v
Parsing Verilog input from `uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json top_icebreaker.json' --

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

4.3.1. Analyzing design hierarchy..
Top module:  \top

4.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\led_panel_single'.
Generating RTLIL representation for module `\led_panel_single'.

4.3.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \led_panel_single

4.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

4.3.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \led_panel_single
Used module:         \uart_rx

4.3.6. Analyzing design hierarchy..
Top module:  \top
Used module:     \led_panel_single
Used module:         \uart_rx
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\led_panel_single'.
Removing unused module `$abstract\top'.
Removed 3 unused modules.

4.4. Executing PROC pass (convert processes to netlists).

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 7 switch rules as full_case in process $proc$uart_rx.v:50$944 in module uart_rx.
Marked 6 switch rules as full_case in process $proc$led_panel_single.v:228$600 in module led_panel_single.
Marked 10 switch rules as full_case in process $proc$led_panel_single.v:78$481 in module led_panel_single.
Marked 2 switch rules as full_case in process $proc$top_icebreaker.v:71$382 in module top.
Removed a total of 0 dead cases.

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 180 assignments to connections.

4.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0
Found init rule in `\uart_rx.$proc$uart_rx.v:37$983'.
  Set init value: \r_SM_Main = 3'000
Found init rule in `\uart_rx.$proc$uart_rx.v:36$982'.
  Set init value: \r_Rx_DV = 1'0
Found init rule in `\uart_rx.$proc$uart_rx.v:35$981'.
  Set init value: \r_Rx_Byte = 8'00000000
Found init rule in `\uart_rx.$proc$uart_rx.v:34$980'.
  Set init value: \r_Bit_Index = 3'000
Found init rule in `\uart_rx.$proc$uart_rx.v:33$979'.
  Set init value: \r_Clock_Count = 8'00000000
Found init rule in `\uart_rx.$proc$uart_rx.v:31$978'.
  Set init value: \r_Rx_Data = 1'1
Found init rule in `\uart_rx.$proc$uart_rx.v:30$977'.
  Set init value: \r_Rx_Data_R = 1'1

4.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.

4.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~55 debug messages>

4.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:37$983'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:36$982'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:35$981'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:34$980'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:33$979'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:31$978'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:30$977'.
Creating decoders for process `\uart_rx.$proc$uart_rx.v:50$944'.
     1/12: $2$lookahead\r_Rx_Byte$943[7:0]$961
     2/12: $2$bitselwrite$sel$uart_rx.v:98$941[2:0]$960
     3/12: $2$bitselwrite$data$uart_rx.v:98$940[7:0]$959
     4/12: $2$bitselwrite$mask$uart_rx.v:98$939[7:0]$958
     5/12: $0\r_SM_Main[2:0]
     6/12: $1$lookahead\r_Rx_Byte$943[7:0]$952
     7/12: $1$bitselwrite$sel$uart_rx.v:98$941[2:0]$951
     8/12: $1$bitselwrite$data$uart_rx.v:98$940[7:0]$950
     9/12: $1$bitselwrite$mask$uart_rx.v:98$939[7:0]$949
    10/12: $0\r_Rx_DV[0:0]
    11/12: $0\r_Bit_Index[2:0]
    12/12: $0\r_Clock_Count[7:0]
Creating decoders for process `\uart_rx.$proc$uart_rx.v:42$942'.
Creating decoders for process `\led_panel_single.$proc$led_panel_single.v:228$600'.
     1/200: $4$memwr$\frame_buffer$led_panel_single.v:353$477_EN[15:0]$930
     2/200: $4$memwr$\frame_buffer$led_panel_single.v:353$477_DATA[15:0]$929
     3/200: $4$memwr$\frame_buffer$led_panel_single.v:353$477_ADDR[3:0]$928
     4/200: $4$memwr$\frame_buffer$led_panel_single.v:356$478_EN[15:0]$933
     5/200: $4$memwr$\frame_buffer$led_panel_single.v:356$478_DATA[15:0]$932
     6/200: $4$memwr$\frame_buffer$led_panel_single.v:356$478_ADDR[3:0]$931
     7/200: $3$memwr$\frame_buffer$led_panel_single.v:356$478_EN[15:0]$927
     8/200: $3$memwr$\frame_buffer$led_panel_single.v:356$478_DATA[15:0]$926
     9/200: $3$memwr$\frame_buffer$led_panel_single.v:356$478_ADDR[3:0]$925
    10/200: $3$memwr$\frame_buffer$led_panel_single.v:353$477_EN[15:0]$924
    11/200: $3$memwr$\frame_buffer$led_panel_single.v:353$477_DATA[15:0]$923
    12/200: $3$memwr$\frame_buffer$led_panel_single.v:353$477_ADDR[3:0]$922
    13/200: $4$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$920
    14/200: $4$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$919
    15/200: $4$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$918
    16/200: $4$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$917
    17/200: $4$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$916
    18/200: $4$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$915
    19/200: $4$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$914
    20/200: $4$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$913
    21/200: $4$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$912
    22/200: $4$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$911
    23/200: $4$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$910
    24/200: $4$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$909
    25/200: $4$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$908
    26/200: $4$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$907
    27/200: $4$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$906
    28/200: $4$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$905
    29/200: $3$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$904
    30/200: $3$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$903
    31/200: $3$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$902
    32/200: $3$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$901
    33/200: $3$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$900
    34/200: $3$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$899
    35/200: $3$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$898
    36/200: $3$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$897
    37/200: $3$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$896
    38/200: $3$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$895
    39/200: $3$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$894
    40/200: $3$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$893
    41/200: $3$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$892
    42/200: $3$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$891
    43/200: $3$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$890
    44/200: $3$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$889
    45/200: $2$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$881
    46/200: $2$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$880
    47/200: $2$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$879
    48/200: $2$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$878
    49/200: $2$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$877
    50/200: $2$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$876
    51/200: $2$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$875
    52/200: $2$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$874
    53/200: $2$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$873
    54/200: $2$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$872
    55/200: $2$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$871
    56/200: $2$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$870
    57/200: $2$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$869
    58/200: $2$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$868
    59/200: $2$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$867
    60/200: $2$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$866
    61/200: $2$memwr$\frame_buffer$led_panel_single.v:356$478_EN[15:0]$887
    62/200: $2$memwr$\frame_buffer$led_panel_single.v:356$478_DATA[15:0]$886
    63/200: $2$memwr$\frame_buffer$led_panel_single.v:356$478_ADDR[3:0]$885
    64/200: $2$memwr$\frame_buffer$led_panel_single.v:353$477_EN[15:0]$884
    65/200: $2$memwr$\frame_buffer$led_panel_single.v:353$477_DATA[15:0]$883
    66/200: $2$memwr$\frame_buffer$led_panel_single.v:353$477_ADDR[3:0]$882
    67/200: $1$memwr$\frame_buffer$led_panel_single.v:303$460_EN[15:0]$843
    68/200: $1$memwr$\frame_buffer$led_panel_single.v:303$460_DATA[15:0]$842
    69/200: $1$memwr$\frame_buffer$led_panel_single.v:302$459_EN[15:0]$841
    70/200: $1$memwr$\frame_buffer$led_panel_single.v:302$459_DATA[15:0]$840
    71/200: $1$memwr$\frame_buffer$led_panel_single.v:301$458_EN[15:0]$839
    72/200: $1$memwr$\frame_buffer$led_panel_single.v:301$458_DATA[15:0]$838
    73/200: $1$memwr$\frame_buffer$led_panel_single.v:300$457_EN[15:0]$837
    74/200: $1$memwr$\frame_buffer$led_panel_single.v:300$457_DATA[15:0]$836
    75/200: $1$memwr$\frame_buffer$led_panel_single.v:299$456_EN[15:0]$835
    76/200: $1$memwr$\frame_buffer$led_panel_single.v:299$456_DATA[15:0]$834
    77/200: $1$memwr$\frame_buffer$led_panel_single.v:298$455_EN[15:0]$833
    78/200: $1$memwr$\frame_buffer$led_panel_single.v:298$455_DATA[15:0]$832
    79/200: $1$memwr$\frame_buffer$led_panel_single.v:297$454_EN[15:0]$831
    80/200: $1$memwr$\frame_buffer$led_panel_single.v:297$454_DATA[15:0]$830
    81/200: $1$memwr$\frame_buffer$led_panel_single.v:296$453_EN[15:0]$829
    82/200: $1$memwr$\frame_buffer$led_panel_single.v:296$453_DATA[15:0]$828
    83/200: $1$memwr$\frame_buffer$led_panel_single.v:295$452_EN[15:0]$827
    84/200: $1$memwr$\frame_buffer$led_panel_single.v:295$452_DATA[15:0]$826
    85/200: $1$memwr$\frame_buffer$led_panel_single.v:293$451_EN[15:0]$825
    86/200: $1$memwr$\frame_buffer$led_panel_single.v:293$451_DATA[15:0]$824
    87/200: $1$memwr$\frame_buffer$led_panel_single.v:292$450_EN[15:0]$823
    88/200: $1$memwr$\frame_buffer$led_panel_single.v:292$450_DATA[15:0]$822
    89/200: $1$memwr$\frame_buffer$led_panel_single.v:291$449_EN[15:0]$821
    90/200: $1$memwr$\frame_buffer$led_panel_single.v:291$449_DATA[15:0]$820
    91/200: $1$memwr$\frame_buffer$led_panel_single.v:290$448_EN[15:0]$819
    92/200: $1$memwr$\frame_buffer$led_panel_single.v:290$448_DATA[15:0]$818
    93/200: $1$memwr$\frame_buffer$led_panel_single.v:289$447_EN[15:0]$817
    94/200: $1$memwr$\frame_buffer$led_panel_single.v:289$447_DATA[15:0]$816
    95/200: $1$memwr$\frame_buffer$led_panel_single.v:288$446_EN[15:0]$815
    96/200: $1$memwr$\frame_buffer$led_panel_single.v:288$446_DATA[15:0]$814
    97/200: $1$memwr$\frame_buffer$led_panel_single.v:287$445_EN[15:0]$813
    98/200: $1$memwr$\frame_buffer$led_panel_single.v:287$445_DATA[15:0]$812
    99/200: $1$memwr$\frame_buffer$led_panel_single.v:286$444_EN[15:0]$811
   100/200: $1$memwr$\frame_buffer$led_panel_single.v:286$444_DATA[15:0]$810
   101/200: $1$memwr$\frame_buffer$led_panel_single.v:284$443_EN[15:0]$809
   102/200: $1$memwr$\frame_buffer$led_panel_single.v:284$443_DATA[15:0]$808
   103/200: $1$memwr$\frame_buffer$led_panel_single.v:283$442_EN[15:0]$807
   104/200: $1$memwr$\frame_buffer$led_panel_single.v:283$442_DATA[15:0]$806
   105/200: $1$memwr$\frame_buffer$led_panel_single.v:282$441_EN[15:0]$805
   106/200: $1$memwr$\frame_buffer$led_panel_single.v:282$441_DATA[15:0]$804
   107/200: $1$memwr$\frame_buffer$led_panel_single.v:281$440_EN[15:0]$803
   108/200: $1$memwr$\frame_buffer$led_panel_single.v:281$440_DATA[15:0]$802
   109/200: $1$memwr$\frame_buffer$led_panel_single.v:280$439_EN[15:0]$801
   110/200: $1$memwr$\frame_buffer$led_panel_single.v:280$439_DATA[15:0]$800
   111/200: $1$memwr$\frame_buffer$led_panel_single.v:279$438_EN[15:0]$799
   112/200: $1$memwr$\frame_buffer$led_panel_single.v:279$438_DATA[15:0]$798
   113/200: $1$memwr$\frame_buffer$led_panel_single.v:278$437_EN[15:0]$797
   114/200: $1$memwr$\frame_buffer$led_panel_single.v:278$437_DATA[15:0]$796
   115/200: $1$memwr$\frame_buffer$led_panel_single.v:277$436_EN[15:0]$795
   116/200: $1$memwr$\frame_buffer$led_panel_single.v:277$436_DATA[15:0]$794
   117/200: $1$memwr$\frame_buffer$led_panel_single.v:275$435_EN[15:0]$793
   118/200: $1$memwr$\frame_buffer$led_panel_single.v:275$435_DATA[15:0]$792
   119/200: $1$memwr$\frame_buffer$led_panel_single.v:274$434_EN[15:0]$791
   120/200: $1$memwr$\frame_buffer$led_panel_single.v:274$434_DATA[15:0]$790
   121/200: $1$memwr$\frame_buffer$led_panel_single.v:273$433_EN[15:0]$789
   122/200: $1$memwr$\frame_buffer$led_panel_single.v:273$433_DATA[15:0]$788
   123/200: $1$memwr$\frame_buffer$led_panel_single.v:272$432_EN[15:0]$787
   124/200: $1$memwr$\frame_buffer$led_panel_single.v:272$432_DATA[15:0]$786
   125/200: $1$memwr$\frame_buffer$led_panel_single.v:271$431_EN[15:0]$785
   126/200: $1$memwr$\frame_buffer$led_panel_single.v:271$431_DATA[15:0]$784
   127/200: $1$memwr$\frame_buffer$led_panel_single.v:270$430_EN[15:0]$783
   128/200: $1$memwr$\frame_buffer$led_panel_single.v:270$430_DATA[15:0]$782
   129/200: $1$memwr$\frame_buffer$led_panel_single.v:269$429_EN[15:0]$781
   130/200: $1$memwr$\frame_buffer$led_panel_single.v:269$429_DATA[15:0]$780
   131/200: $1$memwr$\frame_buffer$led_panel_single.v:268$428_EN[15:0]$779
   132/200: $1$memwr$\frame_buffer$led_panel_single.v:268$428_DATA[15:0]$778
   133/200: $1$memwr$\frame_buffer$led_panel_single.v:266$427_EN[15:0]$777
   134/200: $1$memwr$\frame_buffer$led_panel_single.v:266$427_DATA[15:0]$776
   135/200: $1$memwr$\frame_buffer$led_panel_single.v:265$426_EN[15:0]$775
   136/200: $1$memwr$\frame_buffer$led_panel_single.v:265$426_DATA[15:0]$774
   137/200: $1$memwr$\frame_buffer$led_panel_single.v:264$425_EN[15:0]$773
   138/200: $1$memwr$\frame_buffer$led_panel_single.v:264$425_DATA[15:0]$772
   139/200: $1$memwr$\frame_buffer$led_panel_single.v:263$424_EN[15:0]$771
   140/200: $1$memwr$\frame_buffer$led_panel_single.v:263$424_DATA[15:0]$770
   141/200: $1$memwr$\frame_buffer$led_panel_single.v:262$423_EN[15:0]$769
   142/200: $1$memwr$\frame_buffer$led_panel_single.v:262$423_DATA[15:0]$768
   143/200: $1$memwr$\frame_buffer$led_panel_single.v:261$422_EN[15:0]$767
   144/200: $1$memwr$\frame_buffer$led_panel_single.v:261$422_DATA[15:0]$766
   145/200: $1$memwr$\frame_buffer$led_panel_single.v:260$421_EN[15:0]$765
   146/200: $1$memwr$\frame_buffer$led_panel_single.v:260$421_DATA[15:0]$764
   147/200: $1$memwr$\frame_buffer$led_panel_single.v:258$420_EN[15:0]$763
   148/200: $1$memwr$\frame_buffer$led_panel_single.v:258$420_DATA[15:0]$762
   149/200: $1$memwr$\frame_buffer$led_panel_single.v:257$419_EN[15:0]$761
   150/200: $1$memwr$\frame_buffer$led_panel_single.v:257$419_DATA[15:0]$760
   151/200: $1$memwr$\frame_buffer$led_panel_single.v:256$418_EN[15:0]$759
   152/200: $1$memwr$\frame_buffer$led_panel_single.v:256$418_DATA[15:0]$758
   153/200: $1$memwr$\frame_buffer$led_panel_single.v:255$417_EN[15:0]$757
   154/200: $1$memwr$\frame_buffer$led_panel_single.v:255$417_DATA[15:0]$756
   155/200: $1$memwr$\frame_buffer$led_panel_single.v:254$416_EN[15:0]$755
   156/200: $1$memwr$\frame_buffer$led_panel_single.v:254$416_DATA[15:0]$754
   157/200: $1$memwr$\frame_buffer$led_panel_single.v:253$415_EN[15:0]$753
   158/200: $1$memwr$\frame_buffer$led_panel_single.v:253$415_DATA[15:0]$752
   159/200: $1$memwr$\frame_buffer$led_panel_single.v:252$414_EN[15:0]$751
   160/200: $1$memwr$\frame_buffer$led_panel_single.v:252$414_DATA[15:0]$750
   161/200: $1$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$749
   162/200: $1$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$748
   163/200: $1$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$747
   164/200: $1$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$746
   165/200: $1$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$745
   166/200: $1$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$744
   167/200: $1$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$743
   168/200: $1$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$742
   169/200: $1$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$741
   170/200: $1$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$740
   171/200: $1$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$739
   172/200: $1$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$738
   173/200: $1$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$737
   174/200: $1$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$736
   175/200: $1$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$735
   176/200: $1$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$734
   177/200: $1$memwr$\frame_buffer$led_panel_single.v:356$478_EN[15:0]$865
   178/200: $1$memwr$\frame_buffer$led_panel_single.v:356$478_DATA[15:0]$864
   179/200: $1$memwr$\frame_buffer$led_panel_single.v:356$478_ADDR[3:0]$863
   180/200: $1$memwr$\frame_buffer$led_panel_single.v:353$477_EN[15:0]$862
   181/200: $1$memwr$\frame_buffer$led_panel_single.v:353$477_DATA[15:0]$861
   182/200: $1$memwr$\frame_buffer$led_panel_single.v:353$477_ADDR[3:0]$860
   183/200: $1$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$859
   184/200: $1$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$858
   185/200: $1$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$857
   186/200: $1$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$856
   187/200: $1$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$855
   188/200: $1$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$854
   189/200: $1$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$853
   190/200: $1$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$852
   191/200: $1$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$851
   192/200: $1$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$850
   193/200: $1$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$849
   194/200: $1$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$848
   195/200: $1$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$847
   196/200: $1$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$846
   197/200: $1$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$845
   198/200: $1$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$844
   199/200: $0\uart_data_state[1:0]
   200/200: $0\rgb[2:0]
Creating decoders for process `\led_panel_single.$proc$led_panel_single.v:78$481'.
     1/72: $6$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$575
     2/72: $6$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$574
     3/72: $6$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$577
     4/72: $6$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$576
     5/72: $5$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$571
     6/72: $5$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$570
     7/72: $5$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$569
     8/72: $5$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$568
     9/72: $5$mem2bits$\frame_buffer$led_panel_single.v:181$397[15:0]$573
    10/72: $5$mem2bits$\frame_buffer$led_panel_single.v:175$396[15:0]$572
    11/72: $5$mem2bits$\frame_buffer$led_panel_single.v:126$389[15:0]$552
    12/72: $5$mem2bits$\frame_buffer$led_panel_single.v:120$388[15:0]$551
    13/72: $5$mem2bits$\frame_buffer$led_panel_single.v:139$391[15:0]$554
    14/72: $5$mem2bits$\frame_buffer$led_panel_single.v:133$390[15:0]$553
    15/72: $4$mem2bits$\frame_buffer$led_panel_single.v:139$391[15:0]$544
    16/72: $4$mem2bits$\frame_buffer$led_panel_single.v:133$390[15:0]$543
    17/72: $4$mem2bits$\frame_buffer$led_panel_single.v:126$389[15:0]$542
    18/72: $4$mem2bits$\frame_buffer$led_panel_single.v:120$388[15:0]$541
    19/72: $4$mem2bits$\frame_buffer$led_panel_single.v:181$397[15:0]$550
    20/72: $4$mem2bits$\frame_buffer$led_panel_single.v:175$396[15:0]$549
    21/72: $4$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$548
    22/72: $4$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$547
    23/72: $4$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$546
    24/72: $4$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$545
    25/72: $0\blue[1:0] [1]
    26/72: $0\blue[1:0] [0]
    27/72: $0\green[1:0] [0]
    28/72: $0\red[1:0] [0]
    29/72: $3$mem2bits$\frame_buffer$led_panel_single.v:106$386[15:0]$522
    30/72: $3$mem2bits$\frame_buffer$led_panel_single.v:181$397[15:0]$533
    31/72: $3$mem2bits$\frame_buffer$led_panel_single.v:175$396[15:0]$532
    32/72: $3$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$531
    33/72: $3$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$530
    34/72: $3$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$529
    35/72: $3$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$528
    36/72: $3$mem2bits$\frame_buffer$led_panel_single.v:139$391[15:0]$527
    37/72: $3$mem2bits$\frame_buffer$led_panel_single.v:133$390[15:0]$526
    38/72: $3$mem2bits$\frame_buffer$led_panel_single.v:126$389[15:0]$525
    39/72: $3$mem2bits$\frame_buffer$led_panel_single.v:120$388[15:0]$524
    40/72: $2$mem2bits$\frame_buffer$led_panel_single.v:181$397[15:0]$518
    41/72: $2$mem2bits$\frame_buffer$led_panel_single.v:175$396[15:0]$517
    42/72: $2$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$516
    43/72: $2$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$515
    44/72: $2$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$514
    45/72: $2$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$513
    46/72: $2$mem2bits$\frame_buffer$led_panel_single.v:139$391[15:0]$512
    47/72: $2$mem2bits$\frame_buffer$led_panel_single.v:133$390[15:0]$511
    48/72: $2$mem2bits$\frame_buffer$led_panel_single.v:126$389[15:0]$510
    49/72: $2$mem2bits$\frame_buffer$led_panel_single.v:120$388[15:0]$509
    50/72: $2$mem2bits$\frame_buffer$led_panel_single.v:112$387[15:0]$508
    51/72: $2$mem2bits$\frame_buffer$led_panel_single.v:106$386[15:0]$507
    52/72: $1$mem2bits$\frame_buffer$led_panel_single.v:181$397[15:0]$506
    53/72: $1$mem2bits$\frame_buffer$led_panel_single.v:175$396[15:0]$505
    54/72: $1$mem2bits$\frame_buffer$led_panel_single.v:167$395[15:0]$504
    55/72: $1$mem2bits$\frame_buffer$led_panel_single.v:161$394[15:0]$503
    56/72: $1$mem2bits$\frame_buffer$led_panel_single.v:154$393[15:0]$502
    57/72: $1$mem2bits$\frame_buffer$led_panel_single.v:148$392[15:0]$501
    58/72: $1$mem2bits$\frame_buffer$led_panel_single.v:139$391[15:0]$500
    59/72: $1$mem2bits$\frame_buffer$led_panel_single.v:133$390[15:0]$499
    60/72: $1$mem2bits$\frame_buffer$led_panel_single.v:126$389[15:0]$498
    61/72: $1$mem2bits$\frame_buffer$led_panel_single.v:120$388[15:0]$497
    62/72: $1$mem2bits$\frame_buffer$led_panel_single.v:112$387[15:0]$496
    63/72: $1$mem2bits$\frame_buffer$led_panel_single.v:106$386[15:0]$495
    64/72: $0\led_data_state[2:0]
    65/72: $0\row_cnt[1:0]
    66/72: $0\col_cnt[5:0]
    67/72: $0\sclk_en[0:0]
    68/72: $0\latch[0:0]
    69/72: $0\blank[0:0]
    70/72: $0\red[1:0] [1]
    71/72: $0\green[1:0] [1]
    72/72: $3$mem2bits$\frame_buffer$led_panel_single.v:112$387[15:0]$523
Creating decoders for process `\top.$proc$top_icebreaker.v:71$382'.
     1/2: $0\rst_delayed[0:0]
     2/2: $0\rst_delay_counter[15:0]

4.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$3334' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$3335' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$3336' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$3337' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$3338' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$3339' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$3340' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$3341' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$3342' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$3343' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$3344' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$3345' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$3346' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$3347' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$3348' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$3349' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$3350' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$3351' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$3352' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$3353' with positive edge clock.
Creating register for signal `\uart_rx.\r_Clock_Count' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3354' with positive edge clock.
Creating register for signal `\uart_rx.\r_Bit_Index' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3355' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_Byte' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3356' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_DV' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3357' with positive edge clock.
Creating register for signal `\uart_rx.\r_SM_Main' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3358' with positive edge clock.
Creating register for signal `\uart_rx.$bitselwrite$mask$uart_rx.v:98$939' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3359' with positive edge clock.
Creating register for signal `\uart_rx.$bitselwrite$data$uart_rx.v:98$940' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3360' with positive edge clock.
Creating register for signal `\uart_rx.$bitselwrite$sel$uart_rx.v:98$941' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3361' with positive edge clock.
Creating register for signal `\uart_rx.$lookahead\r_Rx_Byte$943' using process `\uart_rx.$proc$uart_rx.v:50$944'.
  created $dff cell `$procdff$3362' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_Data_R' using process `\uart_rx.$proc$uart_rx.v:42$942'.
  created $dff cell `$procdff$3363' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_Data' using process `\uart_rx.$proc$uart_rx.v:42$942'.
  created $dff cell `$procdff$3364' with positive edge clock.
Creating register for signal `\led_panel_single.\rgb' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3365' with positive edge clock.
Creating register for signal `\led_panel_single.\uart_data_state' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3366' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:234$398_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3367' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:235$399_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3368' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:236$400_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3369' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:237$401_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3370' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:238$402_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3371' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:239$403_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3372' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:240$404_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3373' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:241$405_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3374' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:242$406_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3375' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:243$407_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3376' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:244$408_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3377' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:245$409_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3378' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:246$410_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3379' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:247$411_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3380' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:248$412_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3381' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:249$413_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3382' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:252$414_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3383' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:252$414_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3384' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:253$415_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3385' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:253$415_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3386' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:254$416_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3387' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:254$416_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3388' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:255$417_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3389' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:255$417_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3390' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:256$418_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3391' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:256$418_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3392' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:257$419_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3393' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:257$419_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3394' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:258$420_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3395' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:258$420_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3396' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:260$421_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3397' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:260$421_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3398' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:261$422_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3399' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:261$422_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3400' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:262$423_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3401' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:262$423_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3402' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:263$424_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3403' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:263$424_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3404' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:264$425_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3405' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:264$425_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3406' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:265$426_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3407' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:265$426_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3408' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:266$427_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3409' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:266$427_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3410' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:268$428_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3411' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:268$428_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3412' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:269$429_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3413' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:269$429_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3414' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:270$430_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3415' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:270$430_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3416' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:271$431_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3417' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:271$431_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3418' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:272$432_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3419' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:272$432_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3420' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:273$433_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3421' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:273$433_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3422' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:274$434_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3423' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:274$434_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3424' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:275$435_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3425' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:275$435_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3426' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:277$436_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3427' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:277$436_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3428' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:278$437_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3429' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:278$437_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3430' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:279$438_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3431' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:279$438_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3432' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:280$439_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3433' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:280$439_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3434' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:281$440_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3435' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:281$440_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3436' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:282$441_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3437' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:282$441_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3438' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:283$442_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3439' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:283$442_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3440' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:284$443_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3441' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:284$443_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3442' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:286$444_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3443' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:286$444_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3444' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:287$445_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3445' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:287$445_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3446' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:288$446_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3447' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:288$446_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3448' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:289$447_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3449' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:289$447_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3450' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:290$448_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3451' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:290$448_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3452' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:291$449_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3453' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:291$449_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3454' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:292$450_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3455' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:292$450_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3456' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:293$451_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3457' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:293$451_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3458' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:295$452_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3459' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:295$452_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3460' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:296$453_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3461' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:296$453_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3462' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:297$454_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3463' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:297$454_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3464' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:298$455_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3465' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:298$455_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3466' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:299$456_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3467' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:299$456_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3468' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:300$457_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3469' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:300$457_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3470' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:301$458_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3471' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:301$458_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3472' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:302$459_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3473' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:302$459_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3474' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:303$460_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3475' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:303$460_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3476' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:328$461_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3477' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:329$462_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3478' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:330$463_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3479' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:331$464_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3480' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:332$465_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3481' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:333$466_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3482' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:334$467_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3483' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:335$468_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3484' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:336$469_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3485' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:337$470_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3486' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:338$471_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3487' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:339$472_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3488' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:340$473_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3489' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:341$474_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3490' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:342$475_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3491' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:343$476_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3492' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:353$477_ADDR' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3493' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:353$477_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3494' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:353$477_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3495' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:356$478_ADDR' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3496' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:356$478_DATA' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3497' with positive edge clock.
Creating register for signal `\led_panel_single.$memwr$\frame_buffer$led_panel_single.v:356$478_EN' using process `\led_panel_single.$proc$led_panel_single.v:228$600'.
  created $dff cell `$procdff$3498' with positive edge clock.
Creating register for signal `\led_panel_single.\red' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3499' with positive edge clock.
Creating register for signal `\led_panel_single.\blue' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3500' with positive edge clock.
Creating register for signal `\led_panel_single.\green' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3501' with positive edge clock.
Creating register for signal `\led_panel_single.\blank' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3502' with positive edge clock.
Creating register for signal `\led_panel_single.\latch' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3503' with positive edge clock.
Creating register for signal `\led_panel_single.\sclk_en' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3504' with positive edge clock.
Creating register for signal `\led_panel_single.\col_cnt' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3505' with positive edge clock.
Creating register for signal `\led_panel_single.\row_cnt' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3506' with positive edge clock.
Creating register for signal `\led_panel_single.\led_data_state' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3507' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:106$386' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3508' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:112$387' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3509' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:120$388' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3510' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:126$389' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3511' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:133$390' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3512' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:139$391' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3513' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:148$392' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3514' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:154$393' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3515' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:161$394' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3516' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:167$395' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3517' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:175$396' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3518' with positive edge clock.
Creating register for signal `\led_panel_single.$mem2bits$\frame_buffer$led_panel_single.v:181$397' using process `\led_panel_single.$proc$led_panel_single.v:78$481'.
  created $dff cell `$procdff$3519' with positive edge clock.
Creating register for signal `\top.\rst_delay_counter' using process `\top.$proc$top_icebreaker.v:71$382'.
  created $dff cell `$procdff$3520' with positive edge clock.
Creating register for signal `\top.\rst_delayed' using process `\top.$proc$top_icebreaker.v:71$382'.
  created $dff cell `$procdff$3521' with positive edge clock.

4.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `uart_rx.$proc$uart_rx.v:37$983'.
Removing empty process `uart_rx.$proc$uart_rx.v:36$982'.
Removing empty process `uart_rx.$proc$uart_rx.v:35$981'.
Removing empty process `uart_rx.$proc$uart_rx.v:34$980'.
Removing empty process `uart_rx.$proc$uart_rx.v:33$979'.
Removing empty process `uart_rx.$proc$uart_rx.v:31$978'.
Removing empty process `uart_rx.$proc$uart_rx.v:30$977'.
Found and cleaned up 7 empty switches in `\uart_rx.$proc$uart_rx.v:50$944'.
Removing empty process `uart_rx.$proc$uart_rx.v:50$944'.
Removing empty process `uart_rx.$proc$uart_rx.v:42$942'.
Found and cleaned up 6 empty switches in `\led_panel_single.$proc$led_panel_single.v:228$600'.
Removing empty process `led_panel_single.$proc$led_panel_single.v:228$600'.
Found and cleaned up 22 empty switches in `\led_panel_single.$proc$led_panel_single.v:78$481'.
Removing empty process `led_panel_single.$proc$led_panel_single.v:78$481'.
Found and cleaned up 2 empty switches in `\top.$proc$top_icebreaker.v:71$382'.
Removing empty process `top.$proc$top_icebreaker.v:71$382'.
Cleaned up 55 empty switches.

4.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_rx.
<suppressed ~10 debug messages>
Optimizing module led_panel_single.
<suppressed ~125 debug messages>
Optimizing module top.
<suppressed ~4 debug messages>

4.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart_rx.
Deleting now unused module led_panel_single.
<suppressed ~2 debug messages>

4.6. Executing TRIBUF pass.

4.7. Executing DEMINOUT pass (demote inout ports to input or output).

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~22 debug messages>

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 412 unused cells and 1395 unused wires.
<suppressed ~419 debug messages>

4.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\P2_9 is used but has no driver.
Warning: Wire top.\P2_8 is used but has no driver.
Warning: Wire top.\P2_7 is used but has no driver.
Warning: Wire top.\P2_4 is used but has no driver.
Warning: Wire top.\P2_3 is used but has no driver.
Warning: Wire top.\P2_10 is used but has no driver.
Warning: Wire top.\P1B9 is used but has no driver.
Warning: Wire top.\P1B8 is used but has no driver.
Warning: Wire top.\P1B4 is used but has no driver.
Warning: Wire top.\P1B3 is used but has no driver.
Warning: Wire top.\P1B10 is used but has no driver.
Found and reported 11 problems.

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~480 debug messages>
Removed a total of 160 cells.

4.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\top.$procmux$3186: \top.col_cnt -> { \top.col_cnt [5] 1'1 \top.col_cnt [3:0] }
      Replacing known input bits on port B of cell $procmux$3329: \rst_delay_counter -> { 1'1 \rst_delay_counter [14:0] }
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\top.$procmux$1226.
    dead port 2/2 on $mux $flatten\top.$procmux$1232.
    dead port 2/2 on $mux $flatten\top.$procmux$1200.
    dead port 1/2 on $mux $flatten\top.$procmux$1235.
    dead port 2/2 on $mux $flatten\top.$procmux$1241.
    dead port 2/2 on $mux $flatten\top.$procmux$1202.
    dead port 1/2 on $mux $flatten\top.$procmux$1244.
    dead port 2/2 on $mux $flatten\top.$procmux$1250.
    dead port 1/2 on $mux $flatten\top.$procmux$1253.
    dead port 2/2 on $mux $flatten\top.$procmux$1259.
    dead port 1/2 on $mux $flatten\top.$procmux$1262.
    dead port 2/2 on $mux $flatten\top.$procmux$1268.
    dead port 1/2 on $mux $flatten\top.$procmux$1271.
    dead port 2/2 on $mux $flatten\top.$procmux$1279.
    dead port 2/2 on $mux $flatten\top.$procmux$1281.
    dead port 1/2 on $mux $flatten\top.$procmux$1284.
    dead port 2/2 on $mux $flatten\top.$procmux$1292.
    dead port 2/2 on $mux $flatten\top.$procmux$1294.
    dead port 1/2 on $mux $flatten\top.$procmux$1297.
    dead port 2/2 on $mux $flatten\top.$procmux$1305.
    dead port 2/2 on $mux $flatten\top.$procmux$1307.
    dead port 1/2 on $mux $flatten\top.$procmux$1310.
    dead port 2/2 on $mux $flatten\top.$procmux$1318.
    dead port 2/2 on $mux $flatten\top.$procmux$1320.
    dead port 1/2 on $mux $flatten\top.$procmux$1323.
    dead port 2/2 on $mux $flatten\top.$procmux$1331.
    dead port 2/2 on $mux $flatten\top.$procmux$1333.
    dead port 1/2 on $mux $flatten\top.$procmux$1336.
    dead port 2/2 on $mux $flatten\top.$procmux$1344.
    dead port 2/2 on $mux $flatten\top.$procmux$1346.
    dead port 1/2 on $mux $flatten\top.$procmux$1349.
    dead port 2/2 on $mux $flatten\top.$procmux$1357.
    dead port 2/2 on $mux $flatten\top.$procmux$1359.
    dead port 1/2 on $mux $flatten\top.$procmux$1362.
    dead port 2/2 on $mux $flatten\top.$procmux$1370.
    dead port 2/2 on $mux $flatten\top.$procmux$1372.
    dead port 1/2 on $mux $flatten\top.$procmux$1375.
    dead port 2/2 on $mux $flatten\top.$procmux$1383.
    dead port 2/2 on $mux $flatten\top.$procmux$1385.
    dead port 1/2 on $mux $flatten\top.$procmux$1388.
    dead port 2/2 on $mux $flatten\top.$procmux$1396.
    dead port 2/2 on $mux $flatten\top.$procmux$1398.
    dead port 1/2 on $mux $flatten\top.$procmux$1401.
    dead port 2/2 on $mux $flatten\top.$procmux$1409.
    dead port 2/2 on $mux $flatten\top.$procmux$1411.
    dead port 1/2 on $mux $flatten\top.$procmux$1414.
    dead port 2/2 on $mux $flatten\top.$procmux$1422.
    dead port 2/2 on $mux $flatten\top.$procmux$1424.
    dead port 1/2 on $mux $flatten\top.$procmux$1427.
    dead port 2/2 on $mux $flatten\top.$procmux$1435.
    dead port 2/2 on $mux $flatten\top.$procmux$1437.
    dead port 1/2 on $mux $flatten\top.$procmux$1440.
    dead port 2/2 on $mux $flatten\top.$procmux$1448.
    dead port 2/2 on $mux $flatten\top.$procmux$1450.
    dead port 1/2 on $mux $flatten\top.$procmux$1453.
    dead port 2/2 on $mux $flatten\top.$procmux$1461.
    dead port 2/2 on $mux $flatten\top.$procmux$1463.
    dead port 1/2 on $mux $flatten\top.$procmux$1466.
    dead port 2/2 on $mux $flatten\top.$procmux$1474.
    dead port 2/2 on $mux $flatten\top.$procmux$1476.
    dead port 1/2 on $mux $flatten\top.$procmux$1479.
    dead port 2/2 on $mux $flatten\top.$procmux$1486.
    dead port 1/2 on $mux $flatten\top.$procmux$1489.
    dead port 2/2 on $mux $flatten\top.$procmux$1496.
    dead port 1/2 on $mux $flatten\top.$procmux$1499.
    dead port 2/2 on $mux $flatten\top.$procmux$1506.
    dead port 1/2 on $mux $flatten\top.$procmux$1509.
    dead port 2/2 on $mux $flatten\top.$procmux$1516.
    dead port 1/2 on $mux $flatten\top.$procmux$1519.
    dead port 2/2 on $mux $flatten\top.$procmux$1526.
    dead port 1/2 on $mux $flatten\top.$procmux$1529.
    dead port 2/2 on $mux $flatten\top.$procmux$1536.
    dead port 1/2 on $mux $flatten\top.$procmux$1539.
    dead port 2/2 on $mux $flatten\top.$procmux$1546.
    dead port 1/2 on $mux $flatten\top.$procmux$1549.
    dead port 2/2 on $mux $flatten\top.$procmux$1556.
    dead port 1/2 on $mux $flatten\top.$procmux$1559.
    dead port 2/2 on $mux $flatten\top.$procmux$1566.
    dead port 1/2 on $mux $flatten\top.$procmux$1569.
    dead port 2/2 on $mux $flatten\top.$procmux$1576.
    dead port 1/2 on $mux $flatten\top.$procmux$1579.
    dead port 2/2 on $mux $flatten\top.$procmux$1586.
    dead port 1/2 on $mux $flatten\top.$procmux$1589.
    dead port 2/2 on $mux $flatten\top.$procmux$1596.
    dead port 1/2 on $mux $flatten\top.$procmux$1599.
    dead port 2/2 on $mux $flatten\top.$procmux$1606.
    dead port 1/2 on $mux $flatten\top.$procmux$1609.
    dead port 2/2 on $mux $flatten\top.$procmux$1616.
    dead port 1/2 on $mux $flatten\top.$procmux$1619.
    dead port 2/2 on $mux $flatten\top.$procmux$1626.
    dead port 1/2 on $mux $flatten\top.$procmux$1629.
    dead port 2/2 on $mux $flatten\top.$procmux$1636.
    dead port 1/2 on $mux $flatten\top.$procmux$1639.
    dead port 1/2 on $mux $flatten\top.$procmux$1646.
    dead port 1/2 on $mux $flatten\top.$procmux$1653.
    dead port 1/2 on $mux $flatten\top.$procmux$1660.
    dead port 1/2 on $mux $flatten\top.$procmux$1667.
    dead port 1/2 on $mux $flatten\top.$procmux$1674.
    dead port 1/2 on $mux $flatten\top.$procmux$1681.
    dead port 1/2 on $mux $flatten\top.$procmux$1688.
    dead port 1/2 on $mux $flatten\top.$procmux$1695.
    dead port 1/2 on $mux $flatten\top.$procmux$1702.
    dead port 1/2 on $mux $flatten\top.$procmux$1709.
    dead port 1/2 on $mux $flatten\top.$procmux$1716.
    dead port 1/2 on $mux $flatten\top.$procmux$1723.
    dead port 1/2 on $mux $flatten\top.$procmux$1730.
    dead port 1/2 on $mux $flatten\top.$procmux$1737.
    dead port 1/2 on $mux $flatten\top.$procmux$1744.
    dead port 1/2 on $mux $flatten\top.$procmux$1751.
    dead port 1/2 on $mux $flatten\top.$procmux$1205.
    dead port 1/2 on $mux $flatten\top.$procmux$1757.
    dead port 1/2 on $mux $flatten\top.$procmux$1763.
    dead port 1/2 on $mux $flatten\top.$procmux$1769.
    dead port 2/2 on $mux $flatten\top.$procmux$1212.
    dead port 1/2 on $mux $flatten\top.$procmux$1775.
    dead port 2/2 on $mux $flatten\top.$procmux$1214.
    dead port 1/2 on $mux $flatten\top.$procmux$1781.
    dead port 1/2 on $mux $flatten\top.$procmux$1787.
    dead port 2/2 on $mux $flatten\top.$procmux$1150.
    dead port 2/2 on $mux $flatten\top.$procmux$1152.
    dead port 1/2 on $mux $flatten\top.$procmux$1155.
    dead port 2/2 on $mux $flatten\top.$procmux$1163.
    dead port 2/2 on $mux $flatten\top.$procmux$1165.
    dead port 1/2 on $mux $flatten\top.$procmux$1217.
    dead port 1/2 on $mux $flatten\top.$procmux$1168.
    dead port 2/2 on $mux $flatten\top.$procmux$1176.
    dead port 2/2 on $mux $flatten\top.$procmux$1178.
    dead port 2/2 on $mux $flatten\top.\uart_rx.$procmux$1034.
    dead port 1/2 on $mux $flatten\top.$procmux$1181.
    dead port 2/2 on $mux $flatten\top.$procmux$1188.
    dead port 2/2 on $mux $flatten\top.$procmux$1190.
    dead port 2/2 on $mux $flatten\top.$procmux$1223.
    dead port 1/2 on $mux $flatten\top.$procmux$1193.
Removed 133 multiplexer ports.
<suppressed ~154 debug messages>

4.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1342:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1342_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1342_Y [0]
      New connections: $flatten\top.$procmux$1342_Y [15:1] = { $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] $flatten\top.$procmux$1342_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1355:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1355_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1355_Y [0]
      New connections: $flatten\top.$procmux$1355_Y [15:1] = { $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] $flatten\top.$procmux$1355_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1368:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1368_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1368_Y [0]
      New connections: $flatten\top.$procmux$1368_Y [15:1] = { $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] $flatten\top.$procmux$1368_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1277:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1277_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1277_Y [0]
      New connections: $flatten\top.$procmux$1277_Y [15:1] = { $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] $flatten\top.$procmux$1277_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1381:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1381_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1381_Y [0]
      New connections: $flatten\top.$procmux$1381_Y [15:1] = { $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] $flatten\top.$procmux$1381_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1394:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1394_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1394_Y [0]
      New connections: $flatten\top.$procmux$1394_Y [15:1] = { $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] $flatten\top.$procmux$1394_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1290:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1290_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1290_Y [0]
      New connections: $flatten\top.$procmux$1290_Y [15:1] = { $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] $flatten\top.$procmux$1290_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1407:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1407_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1407_Y [0]
      New connections: $flatten\top.$procmux$1407_Y [15:1] = { $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] $flatten\top.$procmux$1407_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1420:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1420_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1420_Y [0]
      New connections: $flatten\top.$procmux$1420_Y [15:1] = { $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] $flatten\top.$procmux$1420_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1303:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1303_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1303_Y [0]
      New connections: $flatten\top.$procmux$1303_Y [15:1] = { $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] $flatten\top.$procmux$1303_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1433:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1433_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1433_Y [0]
      New connections: $flatten\top.$procmux$1433_Y [15:1] = { $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] $flatten\top.$procmux$1433_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1446:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1446_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1446_Y [0]
      New connections: $flatten\top.$procmux$1446_Y [15:1] = { $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] $flatten\top.$procmux$1446_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1316:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1316_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1316_Y [0]
      New connections: $flatten\top.$procmux$1316_Y [15:1] = { $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] $flatten\top.$procmux$1316_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1790:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:303$460_EN[15:0]$710
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:303$460_EN[15:0]$710 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:303$460_EN[15:0]$710 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:303$460_EN[15:0]$710 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1796:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:302$459_EN[15:0]$708
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:302$459_EN[15:0]$708 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:302$459_EN[15:0]$708 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:302$459_EN[15:0]$708 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1802:
      Old ports: A=16'0000000000000000, B=16'0001000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:301$458_EN[15:0]$706
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:301$458_EN[15:0]$706 [12]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:301$458_EN[15:0]$706 [15:13] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:301$458_EN[15:0]$706 [11:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1808:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:300$457_EN[15:0]$704
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:300$457_EN[15:0]$704 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:300$457_EN[15:0]$704 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:300$457_EN[15:0]$704 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1814:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:299$456_EN[15:0]$702
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:299$456_EN[15:0]$702 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:299$456_EN[15:0]$702 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:299$456_EN[15:0]$702 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1820:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:298$455_EN[15:0]$700
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:298$455_EN[15:0]$700 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:298$455_EN[15:0]$700 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:298$455_EN[15:0]$700 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1826:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:297$454_EN[15:0]$698
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:297$454_EN[15:0]$698 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:297$454_EN[15:0]$698 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:297$454_EN[15:0]$698 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1832:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:296$453_EN[15:0]$696
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:296$453_EN[15:0]$696 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:296$453_EN[15:0]$696 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:296$453_EN[15:0]$696 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1838:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:295$452_EN[15:0]$694
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:295$452_EN[15:0]$694 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:295$452_EN[15:0]$694 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:295$452_EN[15:0]$694 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1844:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:293$451_EN[15:0]$692
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:293$451_EN[15:0]$692 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:293$451_EN[15:0]$692 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:293$451_EN[15:0]$692 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1850:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:292$450_EN[15:0]$690
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:292$450_EN[15:0]$690 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:292$450_EN[15:0]$690 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:292$450_EN[15:0]$690 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1856:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:291$449_EN[15:0]$688
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:291$449_EN[15:0]$688 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:291$449_EN[15:0]$688 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:291$449_EN[15:0]$688 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1862:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:290$448_EN[15:0]$686
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:290$448_EN[15:0]$686 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:290$448_EN[15:0]$686 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:290$448_EN[15:0]$686 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1868:
      Old ports: A=16'0000000000000000, B=16'0001000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:289$447_EN[15:0]$684
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:289$447_EN[15:0]$684 [12]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:289$447_EN[15:0]$684 [15:13] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:289$447_EN[15:0]$684 [11:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1874:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:288$446_EN[15:0]$682
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:288$446_EN[15:0]$682 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:288$446_EN[15:0]$682 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:288$446_EN[15:0]$682 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1880:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:287$445_EN[15:0]$680
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:287$445_EN[15:0]$680 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:287$445_EN[15:0]$680 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:287$445_EN[15:0]$680 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1886:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:286$444_EN[15:0]$678
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:286$444_EN[15:0]$678 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:286$444_EN[15:0]$678 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:286$444_EN[15:0]$678 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1892:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:284$443_EN[15:0]$676
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:284$443_EN[15:0]$676 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:284$443_EN[15:0]$676 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:284$443_EN[15:0]$676 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1898:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:283$442_EN[15:0]$674
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:283$442_EN[15:0]$674 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:283$442_EN[15:0]$674 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:283$442_EN[15:0]$674 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1904:
      Old ports: A=16'0000000000000000, B=16'0001000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:282$441_EN[15:0]$672
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:282$441_EN[15:0]$672 [12]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:282$441_EN[15:0]$672 [15:13] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:282$441_EN[15:0]$672 [11:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1910:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:281$440_EN[15:0]$670
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:281$440_EN[15:0]$670 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:281$440_EN[15:0]$670 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:281$440_EN[15:0]$670 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1916:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:280$439_EN[15:0]$668
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:280$439_EN[15:0]$668 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:280$439_EN[15:0]$668 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:280$439_EN[15:0]$668 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1922:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:279$438_EN[15:0]$666
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:279$438_EN[15:0]$666 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:279$438_EN[15:0]$666 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:279$438_EN[15:0]$666 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1928:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:278$437_EN[15:0]$664
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:278$437_EN[15:0]$664 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:278$437_EN[15:0]$664 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:278$437_EN[15:0]$664 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1934:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:277$436_EN[15:0]$662
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:277$436_EN[15:0]$662 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:277$436_EN[15:0]$662 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:277$436_EN[15:0]$662 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1940:
      Old ports: A=16'0000000000000000, B=16'0010000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:275$435_EN[15:0]$660
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:275$435_EN[15:0]$660 [13]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:275$435_EN[15:0]$660 [15:14] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:275$435_EN[15:0]$660 [12:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1946:
      Old ports: A=16'0000000000000000, B=16'0001000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:274$434_EN[15:0]$658
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:274$434_EN[15:0]$658 [12]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:274$434_EN[15:0]$658 [15:13] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:274$434_EN[15:0]$658 [11:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1952:
      Old ports: A=16'0000000000000000, B=16'0001000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:273$433_EN[15:0]$656
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:273$433_EN[15:0]$656 [12]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:273$433_EN[15:0]$656 [15:13] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:273$433_EN[15:0]$656 [11:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1958:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:272$432_EN[15:0]$654
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:272$432_EN[15:0]$654 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:272$432_EN[15:0]$654 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:272$432_EN[15:0]$654 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1964:
      Old ports: A=16'0000000000000000, B=16'0000100000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:271$431_EN[15:0]$652
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:271$431_EN[15:0]$652 [11]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:271$431_EN[15:0]$652 [15:12] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:271$431_EN[15:0]$652 [10:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1970:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:270$430_EN[15:0]$650
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:270$430_EN[15:0]$650 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:270$430_EN[15:0]$650 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:270$430_EN[15:0]$650 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1976:
      Old ports: A=16'0000000000000000, B=16'0000010000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:269$429_EN[15:0]$648
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:269$429_EN[15:0]$648 [10]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:269$429_EN[15:0]$648 [15:11] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:269$429_EN[15:0]$648 [9:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1982:
      Old ports: A=16'0000000000000000, B=16'0000001000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:268$428_EN[15:0]$646
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:268$428_EN[15:0]$646 [9]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:268$428_EN[15:0]$646 [15:10] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:268$428_EN[15:0]$646 [8:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1988:
      Old ports: A=16'0000000000000000, B=16'0000000000100000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:266$427_EN[15:0]$644
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:266$427_EN[15:0]$644 [5]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:266$427_EN[15:0]$644 [15:6] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:266$427_EN[15:0]$644 [4:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1994:
      Old ports: A=16'0000000000000000, B=16'0000000000010000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:265$426_EN[15:0]$642
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:265$426_EN[15:0]$642 [4]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:265$426_EN[15:0]$642 [15:5] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:265$426_EN[15:0]$642 [3:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2000:
      Old ports: A=16'0000000000000000, B=16'0000000000001000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:264$425_EN[15:0]$640
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:264$425_EN[15:0]$640 [3]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:264$425_EN[15:0]$640 [15:4] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:264$425_EN[15:0]$640 [2:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2006:
      Old ports: A=16'0000000000000000, B=16'0000000000000100, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:263$424_EN[15:0]$638
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:263$424_EN[15:0]$638 [2]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:263$424_EN[15:0]$638 [15:3] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:263$424_EN[15:0]$638 [1:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2012:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:262$423_EN[15:0]$636
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:262$423_EN[15:0]$636 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:262$423_EN[15:0]$636 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:262$423_EN[15:0]$636 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2018:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:261$422_EN[15:0]$634
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:261$422_EN[15:0]$634 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:261$422_EN[15:0]$634 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:261$422_EN[15:0]$634 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2024:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:260$421_EN[15:0]$632
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:260$421_EN[15:0]$632 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:260$421_EN[15:0]$632 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:260$421_EN[15:0]$632 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2030:
      Old ports: A=16'0000000000000000, B=16'0000000000100000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:258$420_EN[15:0]$630
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:258$420_EN[15:0]$630 [5]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:258$420_EN[15:0]$630 [15:6] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:258$420_EN[15:0]$630 [4:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2036:
      Old ports: A=16'0000000000000000, B=16'0000000000010000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:257$419_EN[15:0]$628
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:257$419_EN[15:0]$628 [4]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:257$419_EN[15:0]$628 [15:5] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:257$419_EN[15:0]$628 [3:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2042:
      Old ports: A=16'0000000000000000, B=16'0000000000001000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:256$418_EN[15:0]$626
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:256$418_EN[15:0]$626 [3]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:256$418_EN[15:0]$626 [15:4] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:256$418_EN[15:0]$626 [2:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2048:
      Old ports: A=16'0000000000000000, B=16'0000000000000100, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:255$417_EN[15:0]$624
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:255$417_EN[15:0]$624 [2]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:255$417_EN[15:0]$624 [15:3] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:255$417_EN[15:0]$624 [1:0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2054:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:254$416_EN[15:0]$622
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:254$416_EN[15:0]$622 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:254$416_EN[15:0]$622 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:254$416_EN[15:0]$622 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2060:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:253$415_EN[15:0]$620
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:253$415_EN[15:0]$620 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:253$415_EN[15:0]$620 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:253$415_EN[15:0]$620 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2066:
      Old ports: A=16'0000000000000000, B=16'0000000000000010, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:252$414_EN[15:0]$618
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:252$414_EN[15:0]$618 [1]
      New connections: { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:252$414_EN[15:0]$618 [15:2] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:252$414_EN[15:0]$618 [0] } = 15'000000000000000
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2072:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:249$413_EN[15:0]$616 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2075:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:248$412_EN[15:0]$615 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2078:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:247$411_EN[15:0]$614 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2081:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:246$410_EN[15:0]$613 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2084:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:245$409_EN[15:0]$612 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2087:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:244$408_EN[15:0]$611 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2090:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:243$407_EN[15:0]$610 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2093:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:242$406_EN[15:0]$609 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2096:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:241$405_EN[15:0]$608 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2099:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:240$404_EN[15:0]$607 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2102:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:239$403_EN[15:0]$606 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2105:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:238$402_EN[15:0]$605 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2108:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:237$401_EN[15:0]$604 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2111:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:236$400_EN[15:0]$603 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2114:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:235$399_EN[15:0]$602 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2117:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601
      New ports: A=1'0, B=1'1, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:234$398_EN[15:0]$601 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1459:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1459_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1459_Y [0]
      New connections: $flatten\top.$procmux$1459_Y [15:1] = { $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] $flatten\top.$procmux$1459_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1472:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1472_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1472_Y [0]
      New connections: $flatten\top.$procmux$1472_Y [15:1] = { $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] $flatten\top.$procmux$1472_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1329:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\top.$procmux$1329_Y
      New ports: A=1'0, B=1'1, Y=$flatten\top.$procmux$1329_Y [0]
      New connections: $flatten\top.$procmux$1329_Y [15:1] = { $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] $flatten\top.$procmux$1329_Y [0] }
    New ctrl vector for $pmux cell $flatten\top.\uart_rx.$procmux$1106: { $flatten\top.\uart_rx.$procmux$1066_CMP $auto$opt_reduce.cc:134:opt_pmux$3604 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1494:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$919, Y=$flatten\top.$procmux$1494_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1290_Y [0], Y=$flatten\top.$procmux$1494_Y [0]
      New connections: $flatten\top.$procmux$1494_Y [15:1] = { $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] $flatten\top.$procmux$1494_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1504:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$918, Y=$flatten\top.$procmux$1504_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1303_Y [0], Y=$flatten\top.$procmux$1504_Y [0]
      New connections: $flatten\top.$procmux$1504_Y [15:1] = { $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] $flatten\top.$procmux$1504_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1514:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$917, Y=$flatten\top.$procmux$1514_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1316_Y [0], Y=$flatten\top.$procmux$1514_Y [0]
      New connections: $flatten\top.$procmux$1514_Y [15:1] = { $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] $flatten\top.$procmux$1514_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1524:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$916, Y=$flatten\top.$procmux$1524_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1329_Y [0], Y=$flatten\top.$procmux$1524_Y [0]
      New connections: $flatten\top.$procmux$1524_Y [15:1] = { $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] $flatten\top.$procmux$1524_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1534:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$915, Y=$flatten\top.$procmux$1534_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1342_Y [0], Y=$flatten\top.$procmux$1534_Y [0]
      New connections: $flatten\top.$procmux$1534_Y [15:1] = { $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] $flatten\top.$procmux$1534_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1544:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$914, Y=$flatten\top.$procmux$1544_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1355_Y [0], Y=$flatten\top.$procmux$1544_Y [0]
      New connections: $flatten\top.$procmux$1544_Y [15:1] = { $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] $flatten\top.$procmux$1544_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1554:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$913, Y=$flatten\top.$procmux$1554_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1368_Y [0], Y=$flatten\top.$procmux$1554_Y [0]
      New connections: $flatten\top.$procmux$1554_Y [15:1] = { $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] $flatten\top.$procmux$1554_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1564:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$912, Y=$flatten\top.$procmux$1564_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1381_Y [0], Y=$flatten\top.$procmux$1564_Y [0]
      New connections: $flatten\top.$procmux$1564_Y [15:1] = { $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] $flatten\top.$procmux$1564_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1574:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$911, Y=$flatten\top.$procmux$1574_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1394_Y [0], Y=$flatten\top.$procmux$1574_Y [0]
      New connections: $flatten\top.$procmux$1574_Y [15:1] = { $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] $flatten\top.$procmux$1574_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1584:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$910, Y=$flatten\top.$procmux$1584_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1407_Y [0], Y=$flatten\top.$procmux$1584_Y [0]
      New connections: $flatten\top.$procmux$1584_Y [15:1] = { $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] $flatten\top.$procmux$1584_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1594:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$909, Y=$flatten\top.$procmux$1594_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1420_Y [0], Y=$flatten\top.$procmux$1594_Y [0]
      New connections: $flatten\top.$procmux$1594_Y [15:1] = { $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] $flatten\top.$procmux$1594_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1604:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$908, Y=$flatten\top.$procmux$1604_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1433_Y [0], Y=$flatten\top.$procmux$1604_Y [0]
      New connections: $flatten\top.$procmux$1604_Y [15:1] = { $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] $flatten\top.$procmux$1604_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1614:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$907, Y=$flatten\top.$procmux$1614_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1446_Y [0], Y=$flatten\top.$procmux$1614_Y [0]
      New connections: $flatten\top.$procmux$1614_Y [15:1] = { $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] $flatten\top.$procmux$1614_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1624:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$906, Y=$flatten\top.$procmux$1624_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1459_Y [0], Y=$flatten\top.$procmux$1624_Y [0]
      New connections: $flatten\top.$procmux$1624_Y [15:1] = { $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] $flatten\top.$procmux$1624_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1634:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$905, Y=$flatten\top.$procmux$1634_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1472_Y [0], Y=$flatten\top.$procmux$1634_Y [0]
      New connections: $flatten\top.$procmux$1634_Y [15:1] = { $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] $flatten\top.$procmux$1634_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1484:
      Old ports: A=16'0000000000000000, B=$flatten\top.$4$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$920, Y=$flatten\top.$procmux$1484_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1277_Y [0], Y=$flatten\top.$procmux$1484_Y [0]
      New connections: $flatten\top.$procmux$1484_Y [15:1] = { $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] $flatten\top.$procmux$1484_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1643:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$904, Y=$flatten\top.$procmux$1643_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1484_Y [0], Y=$flatten\top.$procmux$1643_Y [0]
      New connections: $flatten\top.$procmux$1643_Y [15:1] = { $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] $flatten\top.$procmux$1643_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1650:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$903, Y=$flatten\top.$procmux$1650_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1494_Y [0], Y=$flatten\top.$procmux$1650_Y [0]
      New connections: $flatten\top.$procmux$1650_Y [15:1] = { $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] $flatten\top.$procmux$1650_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1657:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$902, Y=$flatten\top.$procmux$1657_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1504_Y [0], Y=$flatten\top.$procmux$1657_Y [0]
      New connections: $flatten\top.$procmux$1657_Y [15:1] = { $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] $flatten\top.$procmux$1657_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1664:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$901, Y=$flatten\top.$procmux$1664_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1514_Y [0], Y=$flatten\top.$procmux$1664_Y [0]
      New connections: $flatten\top.$procmux$1664_Y [15:1] = { $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] $flatten\top.$procmux$1664_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1671:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$900, Y=$flatten\top.$procmux$1671_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1524_Y [0], Y=$flatten\top.$procmux$1671_Y [0]
      New connections: $flatten\top.$procmux$1671_Y [15:1] = { $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] $flatten\top.$procmux$1671_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1678:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$899, Y=$flatten\top.$procmux$1678_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1534_Y [0], Y=$flatten\top.$procmux$1678_Y [0]
      New connections: $flatten\top.$procmux$1678_Y [15:1] = { $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] $flatten\top.$procmux$1678_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1685:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$898, Y=$flatten\top.$procmux$1685_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1544_Y [0], Y=$flatten\top.$procmux$1685_Y [0]
      New connections: $flatten\top.$procmux$1685_Y [15:1] = { $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] $flatten\top.$procmux$1685_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1692:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$897, Y=$flatten\top.$procmux$1692_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1554_Y [0], Y=$flatten\top.$procmux$1692_Y [0]
      New connections: $flatten\top.$procmux$1692_Y [15:1] = { $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] $flatten\top.$procmux$1692_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1699:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$896, Y=$flatten\top.$procmux$1699_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1564_Y [0], Y=$flatten\top.$procmux$1699_Y [0]
      New connections: $flatten\top.$procmux$1699_Y [15:1] = { $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] $flatten\top.$procmux$1699_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1706:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$895, Y=$flatten\top.$procmux$1706_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1574_Y [0], Y=$flatten\top.$procmux$1706_Y [0]
      New connections: $flatten\top.$procmux$1706_Y [15:1] = { $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] $flatten\top.$procmux$1706_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1713:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$894, Y=$flatten\top.$procmux$1713_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1584_Y [0], Y=$flatten\top.$procmux$1713_Y [0]
      New connections: $flatten\top.$procmux$1713_Y [15:1] = { $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] $flatten\top.$procmux$1713_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1720:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$893, Y=$flatten\top.$procmux$1720_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1594_Y [0], Y=$flatten\top.$procmux$1720_Y [0]
      New connections: $flatten\top.$procmux$1720_Y [15:1] = { $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] $flatten\top.$procmux$1720_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1727:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$892, Y=$flatten\top.$procmux$1727_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1604_Y [0], Y=$flatten\top.$procmux$1727_Y [0]
      New connections: $flatten\top.$procmux$1727_Y [15:1] = { $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] $flatten\top.$procmux$1727_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1734:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$891, Y=$flatten\top.$procmux$1734_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1614_Y [0], Y=$flatten\top.$procmux$1734_Y [0]
      New connections: $flatten\top.$procmux$1734_Y [15:1] = { $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] $flatten\top.$procmux$1734_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1741:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$890, Y=$flatten\top.$procmux$1741_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1624_Y [0], Y=$flatten\top.$procmux$1741_Y [0]
      New connections: $flatten\top.$procmux$1741_Y [15:1] = { $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] $flatten\top.$procmux$1741_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$1748:
      Old ports: A=16'0000000000000000, B=$flatten\top.$3$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$889, Y=$flatten\top.$procmux$1748_Y
      New ports: A=1'0, B=$flatten\top.$procmux$1634_Y [0], Y=$flatten\top.$procmux$1748_Y [0]
      New connections: $flatten\top.$procmux$1748_Y [15:1] = { $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] $flatten\top.$procmux$1748_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2138:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$881, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726
      New ports: A=$flatten\top.$procmux$1643_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:343$476_EN[15:0]$726 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2141:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$880, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725
      New ports: A=$flatten\top.$procmux$1650_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:342$475_EN[15:0]$725 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2144:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$879, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724
      New ports: A=$flatten\top.$procmux$1657_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:341$474_EN[15:0]$724 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2147:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$878, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723
      New ports: A=$flatten\top.$procmux$1664_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:340$473_EN[15:0]$723 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2150:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$877, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722
      New ports: A=$flatten\top.$procmux$1671_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:339$472_EN[15:0]$722 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2153:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$876, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721
      New ports: A=$flatten\top.$procmux$1678_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:338$471_EN[15:0]$721 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2156:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$875, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720
      New ports: A=$flatten\top.$procmux$1685_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:337$470_EN[15:0]$720 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2159:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$874, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719
      New ports: A=$flatten\top.$procmux$1692_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:336$469_EN[15:0]$719 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2162:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$873, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718
      New ports: A=$flatten\top.$procmux$1699_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:335$468_EN[15:0]$718 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2165:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$872, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717
      New ports: A=$flatten\top.$procmux$1706_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:334$467_EN[15:0]$717 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2168:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$871, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716
      New ports: A=$flatten\top.$procmux$1713_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:333$466_EN[15:0]$716 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2171:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$870, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715
      New ports: A=$flatten\top.$procmux$1720_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:332$465_EN[15:0]$715 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2174:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$869, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714
      New ports: A=$flatten\top.$procmux$1727_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:331$464_EN[15:0]$714 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2177:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$868, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713
      New ports: A=$flatten\top.$procmux$1734_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:330$463_EN[15:0]$713 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2180:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$867, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712
      New ports: A=$flatten\top.$procmux$1741_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:329$462_EN[15:0]$712 [0] }
    Consolidated identical input bits for $mux cell $flatten\top.$procmux$2183:
      Old ports: A=$flatten\top.$2$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$866, B=16'0000000000000000, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711
      New ports: A=$flatten\top.$procmux$1748_Y [0], B=1'0, Y=$flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0]
      New connections: $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [15:1] = { $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] $flatten\top.$0$memwr$\frame_buffer$led_panel_single.v:328$461_EN[15:0]$711 [0] }
  Optimizing cells in module \top.
Performed a total of 128 changes.

4.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~480 debug messages>
Removed a total of 160 cells.

4.11.6. Executing OPT_DFF pass (perform DFF optimizations).

4.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 434 unused wires.
<suppressed ~1 debug messages>

4.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.11.9. Rerunning OPT passes. (Maybe there is more to do..)

4.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

4.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\top.\uart_rx.$procmux$1130: { $flatten\top.\uart_rx.$procmux$1084_CMP $flatten\top.\uart_rx.$procmux$1080_CMP $auto$opt_reduce.cc:134:opt_pmux$3606 }
  Optimizing cells in module \top.
Performed a total of 1 changes.

4.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.11.13. Executing OPT_DFF pass (perform DFF optimizations).

4.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.11.16. Rerunning OPT passes. (Maybe there is more to do..)

4.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

4.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.11.20. Executing OPT_DFF pass (perform DFF optimizations).

4.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.11.23. Finished OPT passes. (There is nothing left to do.)

4.12. Executing FSM pass (extract and optimize FSM).

4.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.top.led_data_state.
Found FSM state register top.top.uart_data_state.
Not marking top.top.uart_rx.r_SM_Main as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.

4.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\top.led_data_state' from module `\top'.
  found $dff cell for state register: $flatten\top.$procdff$3507
  root of input selection tree: $flatten\top.$0\led_data_state[2:0]
  found reset state: 3'101 (guessed from mux tree)
  found ctrl input: \rst_delayed
  found ctrl input: $flatten\top.$procmux$3158_CMP
  found ctrl input: $flatten\top.$procmux$3159_CMP
  found ctrl input: $flatten\top.$procmux$3163_CMP
  found ctrl input: $flatten\top.$procmux$3164_CMP
  found ctrl input: $flatten\top.$procmux$3165_CMP
  found ctrl input: $flatten\top.$procmux$2716_CMP
  found state code: 3'000
  found state code: 3'101
  found ctrl input: \top.col_cnt [4]
  found state code: 3'100
  found state code: 3'011
  found state code: 3'010
  found ctrl input: $flatten\top.$eq$led_panel_single.v:92$519_Y
  found state code: 3'001
  found ctrl output: $flatten\top.$procmux$3165_CMP
  found ctrl output: $flatten\top.$procmux$3164_CMP
  found ctrl output: $flatten\top.$procmux$3163_CMP
  found ctrl output: $flatten\top.$procmux$3159_CMP
  found ctrl output: $flatten\top.$procmux$3158_CMP
  found ctrl output: $flatten\top.$procmux$2716_CMP
  ctrl inputs: { \top.col_cnt [4] $flatten\top.$eq$led_panel_single.v:92$519_Y \rst_delayed }
  ctrl outputs: { $flatten\top.$0\led_data_state[2:0] $flatten\top.$procmux$2716_CMP $flatten\top.$procmux$3158_CMP $flatten\top.$procmux$3159_CMP $flatten\top.$procmux$3163_CMP $flatten\top.$procmux$3164_CMP $flatten\top.$procmux$3165_CMP }
  transition:      3'000 3'-00 ->      3'000 9'000100000
  transition:      3'000 3'-10 ->      3'001 9'001100000
  transition:      3'000 3'--1 ->      3'101 9'101100000
  transition:      3'100 3'--0 ->      3'101 9'101001000
  transition:      3'100 3'--1 ->      3'101 9'101001000
  transition:      3'010 3'--0 ->      3'011 9'011000010
  transition:      3'010 3'--1 ->      3'101 9'101000010
  transition:      3'001 3'--0 ->      3'010 9'010000001
  transition:      3'001 3'--1 ->      3'101 9'101000001
  transition:      3'101 3'--0 ->      3'000 9'000010000
  transition:      3'101 3'--1 ->      3'101 9'101010000
  transition:      3'011 3'0-0 ->      3'011 9'011000100
  transition:      3'011 3'1-0 ->      3'100 9'100000100
  transition:      3'011 3'--1 ->      3'101 9'101000100
Extracting FSM `\top.uart_data_state' from module `\top'.
  found $dff cell for state register: $flatten\top.$procdff$3366
  root of input selection tree: $flatten\top.$0\uart_data_state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \rst_delayed
  found ctrl input: $flatten\top.$procmux$1153_CTRL
  found ctrl input: $flatten\top.$procmux$1282_CMP
  found ctrl input: \top.uart_rx.r_Rx_DV
  found state code: 2'00
  found ctrl input: $flatten\top.$procmux$2195_CMP
  found ctrl input: $flatten\top.$procmux$2196_CMP
  found ctrl input: $flatten\top.$procmux$2197_CMP
  found state code: 2'10
  found state code: 2'01
  found ctrl output: $flatten\top.$procmux$1282_CMP
  found ctrl output: $flatten\top.$procmux$1153_CMP [1]
  found ctrl output: $flatten\top.$procmux$1149_CMP
  ctrl inputs: { $flatten\top.$procmux$1153_CTRL $flatten\top.$procmux$2195_CMP $flatten\top.$procmux$2196_CMP $flatten\top.$procmux$2197_CMP \top.uart_rx.r_Rx_DV \rst_delayed }
  ctrl outputs: { $flatten\top.$0\uart_data_state[1:0] $flatten\top.$procmux$1149_CMP $flatten\top.$procmux$1153_CMP [1] $flatten\top.$procmux$1282_CMP }
  transition:       2'00 6'----00 ->       2'00 5'00001
  transition:       2'00 6'-00010 ->       2'00 5'00001
  transition:       2'00 6'---110 ->       2'00 5'00001
  transition:       2'00 6'--1-10 ->       2'01 5'01001
  transition:       2'00 6'-1--10 ->       2'10 5'10001
  transition:       2'00 6'-----1 ->       2'00 5'00001
  transition:       2'10 6'----00 ->       2'10 5'10010
  transition:       2'10 6'----10 ->       2'00 5'00010
  transition:       2'10 6'-----1 ->       2'00 5'00010
  transition:       2'01 6'----00 ->       2'01 5'01100
  transition:       2'01 6'----10 ->       2'00 5'00100
  transition:       2'01 6'-----1 ->       2'00 5'00100

4.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top.uart_data_state$3615' from module `\top'.
  Removing unused input signal $flatten\top.$procmux$1153_CTRL.
Optimizing FSM `$fsm$\top.led_data_state$3607' from module `\top'.
  Merging pattern 3'--0 and 3'--1 from group (1 4 9'101001000).
  Merging pattern 3'--1 and 3'--0 from group (1 4 9'101001000).

4.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 20 unused cells and 20 unused wires.
<suppressed ~21 debug messages>

4.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top.led_data_state$3607' from module `\top'.
  Removing unused output signal $flatten\top.$procmux$3159_CMP.
  Removing unused output signal $flatten\top.$0\led_data_state[2:0] [0].
  Removing unused output signal $flatten\top.$0\led_data_state[2:0] [1].
  Removing unused output signal $flatten\top.$0\led_data_state[2:0] [2].
Optimizing FSM `$fsm$\top.uart_data_state$3615' from module `\top'.
  Removing unused output signal $flatten\top.$0\uart_data_state[1:0] [0].
  Removing unused output signal $flatten\top.$0\uart_data_state[1:0] [1].

4.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\top.led_data_state$3607' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1-
  100 -> ---1--
  010 -> --1---
  001 -> -1----
  101 -> -----1
  011 -> 1-----
Recoding FSM `$fsm$\top.uart_data_state$3615' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

4.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\top.led_data_state$3607' from module `top':
-------------------------------------

  Information on FSM $fsm$\top.led_data_state$3607 (\top.led_data_state):

  Number of input signals:    3
  Number of output signals:   5
  Number of state bits:       6

  Input signals:
    0: \rst_delayed
    1: $flatten\top.$eq$led_panel_single.v:92$519_Y
    2: \top.col_cnt [4]

  Output signals:
    0: $flatten\top.$procmux$3165_CMP
    1: $flatten\top.$procmux$3164_CMP
    2: $flatten\top.$procmux$3163_CMP
    3: $flatten\top.$procmux$3158_CMP
    4: $flatten\top.$procmux$2716_CMP

  State encoding:
    0:   6'----1-
    1:   6'---1--
    2:   6'--1---
    3:   6'-1----
    4:   6'-----1  <RESET STATE>
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'-00   ->     0 5'10000
      1:     0 3'-10   ->     3 5'10000
      2:     0 3'--1   ->     4 5'10000
      3:     1 3'---   ->     4 5'00000
      4:     2 3'--1   ->     4 5'00010
      5:     2 3'--0   ->     5 5'00010
      6:     3 3'--0   ->     2 5'00001
      7:     3 3'--1   ->     4 5'00001
      8:     4 3'--0   ->     0 5'01000
      9:     4 3'--1   ->     4 5'01000
     10:     5 3'1-0   ->     1 5'00100
     11:     5 3'--1   ->     4 5'00100
     12:     5 3'0-0   ->     5 5'00100

-------------------------------------

FSM `$fsm$\top.uart_data_state$3615' from module `top':
-------------------------------------

  Information on FSM $fsm$\top.uart_data_state$3615 (\top.uart_data_state):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \rst_delayed
    1: \top.uart_rx.r_Rx_DV
    2: $flatten\top.$procmux$2197_CMP
    3: $flatten\top.$procmux$2196_CMP
    4: $flatten\top.$procmux$2195_CMP

  Output signals:
    0: $flatten\top.$procmux$1282_CMP
    1: $flatten\top.$procmux$1153_CMP [1]
    2: $flatten\top.$procmux$1149_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'---00   ->     0 3'001
      1:     0 5'00010   ->     0 3'001
      2:     0 5'--110   ->     0 3'001
      3:     0 5'----1   ->     0 3'001
      4:     0 5'1--10   ->     1 3'001
      5:     0 5'-1-10   ->     2 3'001
      6:     1 5'---10   ->     0 3'010
      7:     1 5'----1   ->     0 3'010
      8:     1 5'---00   ->     1 3'010
      9:     2 5'---10   ->     0 3'100
     10:     2 5'----1   ->     0 3'100
     11:     2 5'---00   ->     2 3'100

-------------------------------------

4.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\top.led_data_state$3607' from module `\top'.
Mapping FSM `$fsm$\top.uart_data_state$3615' from module `\top'.

4.13. Executing OPT pass (performing simple optimizations).

4.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

4.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

4.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$3521 ($dff) from module top (D = $procmux$3323_Y, Q = \rst_delayed, rval = 1'1).
Adding SRST signal on $procdff$3520 ($dff) from module top (D = $procmux$3329_Y, Q = \rst_delay_counter, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$3697 ($sdff) from module top (D = $add$top_icebreaker.v:80$385_Y [14:0], Q = \rst_delay_counter [14:0]).
Adding EN signal on $flatten\top.\uart_rx.$procdff$3357 ($dff) from module top (D = $flatten\top.\uart_rx.$0\r_Rx_DV[0:0], Q = \top.uart_rx.r_Rx_DV).
Adding EN signal on $flatten\top.\uart_rx.$procdff$3356 ($dff) from module top (D = $flatten\top.\uart_rx.$or$uart_rx.v:0$972_Y, Q = \top.uart_rx.r_Rx_Byte).
Adding EN signal on $flatten\top.\uart_rx.$procdff$3355 ($dff) from module top (D = $flatten\top.\uart_rx.$0\r_Bit_Index[2:0], Q = \top.uart_rx.r_Bit_Index).
Adding EN signal on $flatten\top.\uart_rx.$procdff$3354 ($dff) from module top (D = $flatten\top.\uart_rx.$0\r_Clock_Count[7:0], Q = \top.uart_rx.r_Clock_Count).
Adding SRST signal on $flatten\top.$procdff$3506 ($dff) from module top (D = $flatten\top.$procmux$3177_Y, Q = \top.row_cnt, rval = 2'11).
Adding EN signal on $auto$ff.cc:266:slice$3726 ($sdff) from module top (D = $flatten\top.$procmux$3175_Y, Q = \top.row_cnt).
Adding SRST signal on $flatten\top.$procdff$3505 ($dff) from module top (D = $flatten\top.$procmux$3183_Y, Q = \top.col_cnt, rval = 6'011111).
Adding EN signal on $auto$ff.cc:266:slice$3728 ($sdff) from module top (D = $flatten\top.$procmux$3183_Y [4], Q = \top.col_cnt [4]).
Adding EN signal on $auto$ff.cc:266:slice$3728 ($sdff) from module top (D = { $flatten\top.$procmux$3183_Y [5] $flatten\top.$procmux$3183_Y [3:0] }, Q = { \top.col_cnt [5] \top.col_cnt [3:0] }).
Adding SRST signal on $flatten\top.$procdff$3504 ($dff) from module top (D = $flatten\top.$procmux$3206_Y, Q = \top.sclk_en, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3745 ($sdff) from module top (D = $flatten\top.$procmux$3204_Y, Q = \top.sclk_en).
Adding SRST signal on $flatten\top.$procdff$3503 ($dff) from module top (D = $flatten\top.$procmux$3215_Y, Q = \top.latch, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3747 ($sdff) from module top (D = $flatten\top.$procmux$3215_Y, Q = \top.latch).
Adding SRST signal on $flatten\top.$procdff$3502 ($dff) from module top (D = $flatten\top.$procmux$3227_Y, Q = \top.blank, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$3751 ($sdff) from module top (D = $flatten\top.$procmux$3225_Y, Q = \top.blank).
Adding SRST signal on $flatten\top.$procdff$3501 ($dff) from module top (D = { $flatten\top.$procmux$3303_Y $flatten\top.$procmux$2791_Y }, Q = \top.green, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3753 ($sdff) from module top (D = { $flatten\top.$procmux$3301_Y $flatten\top.$procmux$2789_Y }, Q = \top.green).
Adding SRST signal on $flatten\top.$procdff$3500 ($dff) from module top (D = { $flatten\top.$procmux$2715_Y $flatten\top.$procmux$2753_Y }, Q = \top.blue, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3755 ($sdff) from module top (D = { $flatten\top.$procmux$2713_Y $flatten\top.$procmux$2751_Y }, Q = \top.blue).
Adding SRST signal on $flatten\top.$procdff$3499 ($dff) from module top (D = { $flatten\top.$procmux$3265_Y $flatten\top.$procmux$2829_Y }, Q = \top.red, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$3757 ($sdff) from module top (D = { $flatten\top.$procmux$3263_Y $flatten\top.$procmux$2827_Y }, Q = \top.red).
Adding SRST signal on $flatten\top.$procdff$3365 ($dff) from module top (D = $flatten\top.$procmux$2215_Y, Q = \top.rgb, rval = 3'011).
Adding EN signal on $auto$ff.cc:266:slice$3759 ($sdff) from module top (D = \top.uart_rx.r_Rx_Byte [2:0], Q = \top.rgb).

4.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 28 unused cells and 47 unused wires.
<suppressed ~29 debug messages>

4.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

4.13.9. Rerunning OPT passes. (Maybe there is more to do..)

4.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

4.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.13.13. Executing OPT_DFF pass (perform DFF optimizations).

4.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.13.16. Rerunning OPT passes. (Maybe there is more to do..)

4.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

4.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.13.20. Executing OPT_DFF pass (perform DFF optimizations).

4.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.13.23. Finished OPT passes. (There is nothing left to do.)

4.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3522 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3523 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3524 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3525 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3526 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3527 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3528 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3529 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3530 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3531 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3532 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3533 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3534 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3535 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3536 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3537 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3538 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3539 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3540 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3541 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3542 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3543 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3544 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3545 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3546 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3547 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3548 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3549 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3550 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3551 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3552 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3553 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3554 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3555 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3556 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3557 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3558 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3559 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3560 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3561 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3562 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3563 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3564 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3565 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3566 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3567 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3568 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3569 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3570 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3571 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3572 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3573 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3574 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3575 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3576 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3577 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3578 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3579 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3580 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3581 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3582 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3583 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3584 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3585 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3586 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3587 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3588 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3589 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3590 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3591 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3592 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3593 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3594 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3595 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3596 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3597 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3598 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3599 (top.frame_buffer).
Removed top 28 address bits (of 32) from memory init port top.$flatten\top.$auto$proc_memwr.cc:45:proc_memwr$3600 (top.frame_buffer).
Removed top 31 bits (of 32) from port B of cell top.$add$top_icebreaker.v:80$385 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$add$top_icebreaker.v:80$385 ($add).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3666 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\top.\uart_rx.$eq$uart_rx.v:69$954 ($eq).
Removed top 28 bits (of 32) from port A of cell top.$flatten\top.\uart_rx.$neg$uart_rx.v:0$964 ($neg).
Converting cell top.$flatten\top.\uart_rx.$neg$uart_rx.v:0$964 ($neg) from signed to unsigned.
Removed top 1 bits (of 4) from port A of cell top.$flatten\top.\uart_rx.$neg$uart_rx.v:0$964 ($neg).
Removed top 29 bits (of 32) from port B of cell top.$flatten\top.\uart_rx.$lt$uart_rx.v:101$973 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\top.\uart_rx.$add$uart_rx.v:103$974 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\top.\uart_rx.$add$uart_rx.v:103$974 ($add).
Removed top 28 bits (of 32) from port B of cell top.$flatten\top.\uart_rx.$lt$uart_rx.v:119$975 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\top.\uart_rx.$add$uart_rx.v:121$976 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$flatten\top.\uart_rx.$add$uart_rx.v:121$976 ($add).
Removed top 1 bits (of 3) from port B of cell top.$flatten\top.\uart_rx.$procmux$1035_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\top.\uart_rx.$procmux$1066_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\top.\uart_rx.$procmux$1068 ($mux).
Removed top 2 bits (of 3) from mux cell top.$flatten\top.\uart_rx.$procmux$1071 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\top.\uart_rx.$procmux$1076 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\top.\uart_rx.$procmux$1078 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\top.\uart_rx.$procmux$1080_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\top.\uart_rx.$procmux$1082 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\top.$procmux$2196_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\top.$procmux$2195_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\top.$procmux$1278_CMP0 ($eq).
Removed top 15 bits (of 16) from port A of cell top.$flatten\top.$shl$led_panel_single.v:0$935 ($shl).
Removed top 31 bits (of 32) from port B of cell top.$flatten\top.$add$led_panel_single.v:220$599 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$flatten\top.$add$led_panel_single.v:220$599 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\top.$add$led_panel_single.v:207$597 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\top.$add$led_panel_single.v:207$597 ($add).
Removed top 1 bits (of 4) from port B of cell top.$flatten\top.$shiftx$led_panel_single.v:0$591 ($shiftx).
Removed top 2 bits (of 4) from port B of cell top.$flatten\top.$shiftx$led_panel_single.v:0$585 ($shiftx).
Removed top 27 bits (of 32) from port B of cell top.$flatten\top.$lt$led_panel_single.v:145$567 ($lt).
Removed top 1 bits (of 4) from port B of cell top.$flatten\top.$shiftx$led_panel_single.v:0$562 ($shiftx).
Removed top 27 bits (of 32) from port B of cell top.$flatten\top.$lt$led_panel_single.v:117$540 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\top.$shiftx$led_panel_single.v:0$535 ($shiftx).
Removed top 28 bits (of 32) from port B of cell top.$flatten\top.$lt$led_panel_single.v:104$521 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\top.$sub$led_panel_single.v:96$520 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\top.$sub$led_panel_single.v:96$520 ($sub).
Removed top 16 bits (of 32) from wire top.$add$top_icebreaker.v:80$385_Y.
Removed top 26 bits (of 32) from wire top.$flatten\top.$add$led_panel_single.v:207$597_Y.
Removed top 26 bits (of 32) from wire top.$flatten\top.$sub$led_panel_single.v:96$520_Y.
Removed top 29 bits (of 32) from wire top.$flatten\top.\uart_rx.$add$uart_rx.v:103$974_Y.

4.15. Executing PEEPOPT pass (run peephole optimizers).

4.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.17. Executing SHARE pass (SAT-based resource sharing).
Found 5 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top.$shl$led_panel_single.v:0$936 ($shl):
    Found 1 activation_patterns using ctrl signal { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
    Found 2 candidates: $flatten\top.$shl$led_panel_single.v:0$935 $flatten\top.$shl$led_panel_single.v:0$934
    Analyzing resource sharing with $flatten\top.$shl$led_panel_single.v:0$935 ($shl):
      Found 2 activation_patterns using ctrl signal { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$936: { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$935: { \top.uart_data_state [2] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$935: { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Size of SAT problem: 0 cells, 33 variables, 92 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 5'01110
    Analyzing resource sharing with $flatten\top.$shl$led_panel_single.v:0$934 ($shl):
      Found 1 activation_patterns using ctrl signal { \top.uart_data_state [2] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$936: { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$934: { \top.uart_data_state [2] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Size of SAT problem: 0 cells, 32 variables, 89 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\top.$shl$led_panel_single.v:0$936: $auto$share.cc:977:make_cell_activation_logic$3767
      New cell: $auto$share.cc:667:make_supercell$3774 ($shl)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$3774 ($shl):
    Found 2 activation_patterns using ctrl signal { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
    Found 1 candidates: $flatten\top.$shl$led_panel_single.v:0$935
    Analyzing resource sharing with $flatten\top.$shl$led_panel_single.v:0$935 ($shl):
      Found 2 activation_patterns using ctrl signal { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
      Activation pattern for cell $auto$share.cc:667:make_supercell$3774: { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $auto$share.cc:667:make_supercell$3774: { \top.uart_data_state [2] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$935: { \top.uart_data_state [2] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Activation pattern for cell $flatten\top.$shl$led_panel_single.v:0$935: { \top.uart_data_state [1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 4'1110
      Size of SAT problem: 0 cells, 25 variables, 65 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed } = 5'10110
  Analyzing resource sharing options for $flatten\top.$shl$led_panel_single.v:0$935 ($shl):
    Found 2 activation_patterns using ctrl signal { \top.uart_data_state [2:1] $auto$fsm_map.cc:102:implement_pattern_cache$3671 \top.uart_rx.r_Rx_DV \rst_delayed }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top.$memrd$\frame_buffer$led_panel_single.v:161$584 ($memrd):
    Found 1 activation_patterns using ctrl signal { $flatten\top.$lt$led_panel_single.v:104$521_Y $flatten\top.$lt$led_panel_single.v:117$540_Y }.
    Found 1 candidates: $flatten\top.$memrd$\frame_buffer$led_panel_single.v:106$534
    Analyzing resource sharing with $flatten\top.$memrd$\frame_buffer$led_panel_single.v:106$534 ($memrd):
      Found 2 activation_patterns using ctrl signal { $flatten\top.$lt$led_panel_single.v:104$521_Y $flatten\top.$lt$led_panel_single.v:117$540_Y }.
      Forbidden control signals for this pair of cells: { $flatten\top.$eq$led_panel_single.v:106$536_Y $flatten\top.$eq$led_panel_single.v:112$539_Y $flatten\top.$eq$led_panel_single.v:133$563_Y $flatten\top.$eq$led_panel_single.v:139$566_Y $flatten\top.$eq$led_panel_single.v:161$586_Y $flatten\top.$eq$led_panel_single.v:167$589_Y $flatten\top.$eq$led_panel_single.v:175$592_Y $flatten\top.$eq$led_panel_single.v:181$595_Y }
      Activation pattern for cell $flatten\top.$memrd$\frame_buffer$led_panel_single.v:161$584: { $flatten\top.$lt$led_panel_single.v:104$521_Y $flatten\top.$lt$led_panel_single.v:117$540_Y } = 2'00
      Activation pattern for cell $flatten\top.$memrd$\frame_buffer$led_panel_single.v:106$534: $flatten\top.$lt$led_panel_single.v:104$521_Y = 1'1
      Activation pattern for cell $flatten\top.$memrd$\frame_buffer$led_panel_single.v:106$534: { $flatten\top.$lt$led_panel_single.v:104$521_Y $flatten\top.$lt$led_panel_single.v:117$540_Y } = 2'01
      Size of SAT problem: 0 cells, 50 variables, 126 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\top.$memrd$\frame_buffer$led_panel_single.v:161$584: $auto$share.cc:977:make_cell_activation_logic$3777
      New cell: $auto$share.cc:711:make_supercell$3779 ($memrd)
  Analyzing resource sharing options for $auto$share.cc:711:make_supercell$3779 ($memrd):
    Cell is always active. Therefore no sharing is possible.
Removing 4 cells in module top:
  Removing cell $flatten\top.$memrd$\frame_buffer$led_panel_single.v:106$534 ($memrd).
  Removing cell $flatten\top.$memrd$\frame_buffer$led_panel_single.v:161$584 ($memrd).
  Removing cell $flatten\top.$shl$led_panel_single.v:0$934 ($shl).
  Removing cell $flatten\top.$shl$led_panel_single.v:0$936 ($shl).

4.18. Executing TECHMAP pass (map to technology primitives).

4.18.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.18.2. Continuing TECHMAP pass.
Using template $paramod$254ef1516958dd5ebf9155b08a85a11a24f732fb\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~144 debug messages>

4.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

4.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

4.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top_icebreaker.v:80$385 ($add).
  creating $macc model for $flatten\top.$add$led_panel_single.v:207$597 ($add).
  creating $macc model for $flatten\top.$add$led_panel_single.v:220$599 ($add).
  creating $macc model for $flatten\top.$sub$led_panel_single.v:96$520 ($sub).
  creating $macc model for $flatten\top.\uart_rx.$add$uart_rx.v:103$974 ($add).
  creating $macc model for $flatten\top.\uart_rx.$add$uart_rx.v:121$976 ($add).
  creating $macc model for $flatten\top.\uart_rx.$neg$uart_rx.v:0$964 ($neg).
  creating $alu model for $macc $flatten\top.\uart_rx.$neg$uart_rx.v:0$964.
  creating $alu model for $macc $flatten\top.\uart_rx.$add$uart_rx.v:121$976.
  creating $alu model for $macc $flatten\top.\uart_rx.$add$uart_rx.v:103$974.
  creating $alu model for $macc $flatten\top.$sub$led_panel_single.v:96$520.
  creating $alu model for $macc $flatten\top.$add$led_panel_single.v:220$599.
  creating $alu model for $macc $flatten\top.$add$led_panel_single.v:207$597.
  creating $alu model for $macc $add$top_icebreaker.v:80$385.
  creating $alu model for $flatten\top.$lt$led_panel_single.v:104$521 ($lt): new $alu
  creating $alu model for $flatten\top.$lt$led_panel_single.v:117$540 ($lt): new $alu
  creating $alu model for $flatten\top.$lt$led_panel_single.v:145$567 ($lt): new $alu
  creating $alu model for $flatten\top.\uart_rx.$lt$uart_rx.v:119$975 ($lt): new $alu
  creating $alu cell for $flatten\top.\uart_rx.$lt$uart_rx.v:119$975: $auto$alumacc.cc:485:replace_alu$3790
  creating $alu cell for $flatten\top.$lt$led_panel_single.v:145$567: $auto$alumacc.cc:485:replace_alu$3801
  creating $alu cell for $flatten\top.$lt$led_panel_single.v:117$540: $auto$alumacc.cc:485:replace_alu$3812
  creating $alu cell for $flatten\top.$lt$led_panel_single.v:104$521: $auto$alumacc.cc:485:replace_alu$3823
  creating $alu cell for $add$top_icebreaker.v:80$385: $auto$alumacc.cc:485:replace_alu$3834
  creating $alu cell for $flatten\top.$add$led_panel_single.v:207$597: $auto$alumacc.cc:485:replace_alu$3837
  creating $alu cell for $flatten\top.$add$led_panel_single.v:220$599: $auto$alumacc.cc:485:replace_alu$3840
  creating $alu cell for $flatten\top.$sub$led_panel_single.v:96$520: $auto$alumacc.cc:485:replace_alu$3843
  creating $alu cell for $flatten\top.\uart_rx.$add$uart_rx.v:103$974: $auto$alumacc.cc:485:replace_alu$3846
  creating $alu cell for $flatten\top.\uart_rx.$add$uart_rx.v:121$976: $auto$alumacc.cc:485:replace_alu$3849
  creating $alu cell for $flatten\top.\uart_rx.$neg$uart_rx.v:0$964: $auto$alumacc.cc:485:replace_alu$3852
  created 11 $alu and 0 $macc cells.

4.22. Executing OPT pass (performing simple optimizations).

4.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~24 debug messages>

4.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

4.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

4.22.6. Executing OPT_DFF pass (perform DFF optimizations).

4.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 22 unused wires.
<suppressed ~2 debug messages>

4.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.22.9. Rerunning OPT passes. (Maybe there is more to do..)

4.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

4.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.22.13. Executing OPT_DFF pass (perform DFF optimizations).

4.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.22.16. Finished OPT passes. (There is nothing left to do.)

4.23. Executing MEMORY pass.

4.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 705 transformations.

4.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 2026 transformations.

4.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.top.frame_buffer write port 0.
  Analyzing top.top.frame_buffer write port 1.
  Analyzing top.top.frame_buffer write port 2.
  Analyzing top.top.frame_buffer write port 3.
  Analyzing top.top.frame_buffer write port 4.
  Analyzing top.top.frame_buffer write port 5.
  Analyzing top.top.frame_buffer write port 6.
  Analyzing top.top.frame_buffer write port 7.
  Analyzing top.top.frame_buffer write port 8.
  Analyzing top.top.frame_buffer write port 9.
  Analyzing top.top.frame_buffer write port 10.
  Analyzing top.top.frame_buffer write port 11.
  Analyzing top.top.frame_buffer write port 12.
  Analyzing top.top.frame_buffer write port 13.
  Analyzing top.top.frame_buffer write port 14.
  Analyzing top.top.frame_buffer write port 15.
  Analyzing top.top.frame_buffer write port 16.
  Analyzing top.top.frame_buffer write port 17.
  Analyzing top.top.frame_buffer write port 18.
  Analyzing top.top.frame_buffer write port 19.
  Analyzing top.top.frame_buffer write port 20.
  Analyzing top.top.frame_buffer write port 21.
  Analyzing top.top.frame_buffer write port 22.
  Analyzing top.top.frame_buffer write port 23.
  Analyzing top.top.frame_buffer write port 24.
  Analyzing top.top.frame_buffer write port 25.
  Analyzing top.top.frame_buffer write port 26.
  Analyzing top.top.frame_buffer write port 27.
  Analyzing top.top.frame_buffer write port 28.
  Analyzing top.top.frame_buffer write port 29.
  Analyzing top.top.frame_buffer write port 30.
  Analyzing top.top.frame_buffer write port 31.
  Analyzing top.top.frame_buffer write port 32.
  Analyzing top.top.frame_buffer write port 33.
  Analyzing top.top.frame_buffer write port 34.
  Analyzing top.top.frame_buffer write port 35.
  Analyzing top.top.frame_buffer write port 36.
  Analyzing top.top.frame_buffer write port 37.
  Analyzing top.top.frame_buffer write port 38.
  Analyzing top.top.frame_buffer write port 39.
  Analyzing top.top.frame_buffer write port 40.
  Analyzing top.top.frame_buffer write port 41.
  Analyzing top.top.frame_buffer write port 42.
  Analyzing top.top.frame_buffer write port 43.
  Analyzing top.top.frame_buffer write port 44.
  Analyzing top.top.frame_buffer write port 45.
  Analyzing top.top.frame_buffer write port 46.
  Analyzing top.top.frame_buffer write port 47.
  Analyzing top.top.frame_buffer write port 48.
  Analyzing top.top.frame_buffer write port 49.
  Analyzing top.top.frame_buffer write port 50.
  Analyzing top.top.frame_buffer write port 51.
  Analyzing top.top.frame_buffer write port 52.
  Analyzing top.top.frame_buffer write port 53.
  Analyzing top.top.frame_buffer write port 54.
  Analyzing top.top.frame_buffer write port 55.
  Analyzing top.top.frame_buffer write port 56.
  Analyzing top.top.frame_buffer write port 57.
  Analyzing top.top.frame_buffer write port 58.
  Analyzing top.top.frame_buffer write port 59.
  Analyzing top.top.frame_buffer write port 60.
  Analyzing top.top.frame_buffer write port 61.
  Analyzing top.top.frame_buffer write port 62.
  Analyzing top.top.frame_buffer write port 63.
  Analyzing top.top.frame_buffer write port 64.
  Analyzing top.top.frame_buffer write port 65.
  Analyzing top.top.frame_buffer write port 66.
  Analyzing top.top.frame_buffer write port 67.
  Analyzing top.top.frame_buffer write port 68.
  Analyzing top.top.frame_buffer write port 69.
  Analyzing top.top.frame_buffer write port 70.
  Analyzing top.top.frame_buffer write port 71.
  Analyzing top.top.frame_buffer write port 72.
  Analyzing top.top.frame_buffer write port 73.
  Analyzing top.top.frame_buffer write port 74.
  Analyzing top.top.frame_buffer write port 75.
  Analyzing top.top.frame_buffer write port 76.
  Analyzing top.top.frame_buffer write port 77.
  Analyzing top.top.frame_buffer write port 78.
  Analyzing top.top.frame_buffer write port 79.
  Analyzing top.top.frame_buffer write port 80.

4.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\top.frame_buffer'[0] in module `\top': no output FF found.
Checking read port address `\top.frame_buffer'[0] in module `\top': no address FF found.

4.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.top.frame_buffer by address:
  Merging ports 0, 1 (address 4'0000).
  Merging ports 0, 2 (address 4'0000).
  Merging ports 0, 3 (address 4'0000).
  Merging ports 0, 4 (address 4'0000).
  Merging ports 0, 5 (address 4'0000).
  Merging ports 0, 6 (address 4'0000).
  Merging ports 0, 7 (address 4'0000).
  Merging ports 0, 8 (address 4'0000).
  Merging ports 9, 18 (address 4'1001).
  Merging ports 9, 40 (address 4'1001).
  Merging ports 9, 43 (address 4'1001).
  Merging ports 9, 71 (address 4'1001).
  Merging ports 9, 72 (address 4'1000).
  Merging ports 9, 73 (address 4'1000).
  Merging ports 9, 74 (address 4'1000).
  Merging ports 9, 75 (address 4'1000).
  Merging ports 9, 76 (address 4'1000).
  Merging ports 9, 77 (address 4'1000).
  Merging ports 9, 78 (address 4'1000).
  Merging ports 10, 11 (address 4'1010).
  Merging ports 10, 16 (address 4'1010).
  Merging ports 10, 17 (address 4'1010).
  Merging ports 10, 19 (address 4'1010).
  Merging ports 10, 20 (address 4'1010).
  Merging ports 10, 21 (address 4'1010).
  Merging ports 10, 22 (address 4'1010).
  Merging ports 10, 38 (address 4'1010).
  Merging ports 10, 39 (address 4'1010).
  Merging ports 10, 41 (address 4'1010).
  Merging ports 10, 42 (address 4'1010).
  Merging ports 10, 44 (address 4'1010).
  Merging ports 10, 45 (address 4'1010).
  Merging ports 12, 13 (address 4'1100).
  Merging ports 12, 14 (address 4'1100).
  Merging ports 12, 15 (address 4'1100).
  Merging ports 12, 30 (address 4'1100).
  Merging ports 12, 31 (address 4'1100).
  Merging ports 12, 32 (address 4'1100).
  Merging ports 12, 33 (address 4'1100).
  Merging ports 12, 34 (address 4'1100).
  Merging ports 12, 35 (address 4'1100).
  Merging ports 12, 36 (address 4'1100).
  Merging ports 12, 37 (address 4'1100).
  Merging ports 23, 24 (address 4'0111).
  Merging ports 23, 25 (address 4'0110).
  Merging ports 23, 26 (address 4'0100).
  Merging ports 23, 27 (address 4'0100).
  Merging ports 23, 28 (address 4'0100).
  Merging ports 23, 29 (address 4'0100).
  Merging ports 23, 46 (address 4'0100).
  Merging ports 23, 47 (address 4'0100).
  Merging ports 23, 48 (address 4'0100).
  Merging ports 23, 49 (address 4'0100).
  Merging ports 23, 50 (address 4'0100).
  Merging ports 23, 51 (address 4'0100).
  Merging ports 23, 52 (address 4'0100).
  Merging ports 23, 53 (address 4'0100).
  Merging ports 23, 54 (address 4'0100).
  Merging ports 23, 55 (address 4'0000).
  Merging ports 23, 56 (address 4'0000).
  Merging ports 23, 57 (address 4'0000).
  Merging ports 23, 58 (address 4'0000).
  Merging ports 23, 59 (address 4'0000).
  Merging ports 23, 60 (address 4'0000).
  Merging ports 23, 61 (address 4'0000).
  Merging ports 23, 62 (address 4'0000).
  Merging ports 23, 63 (address 4'0000).
  Merging ports 23, 64 (address 4'0000).
  Merging ports 23, 65 (address 4'0000).
  Merging ports 23, 66 (address 4'0000).
  Merging ports 23, 67 (address 4'0000).
  Merging ports 23, 68 (address 4'0000).
  Merging ports 23, 69 (address 4'0000).
  Merging ports 23, 70 (address 4'0000).
  Merging ports 79, 80 (address \top.uart_rx.r_Rx_Byte [7:4]).
Consolidating write ports of memory top.top.frame_buffer by address:
  Merging ports 1, 2 (address 4'1000).
  Merging ports 1, 3 (address 4'1000).
  Merging ports 1, 4 (address 4'1000).
Consolidating write ports of memory top.top.frame_buffer by address:
Consolidating write ports of memory top.top.frame_buffer using sat-based resource sharing:
  Checking group clocked with posedge \CLK, width 256: ports 0, 1.
  Common input cone for all EN signals: 84 cells.
  Size of unconstrained SAT problem: 393 variables, 988 clauses
  According to SAT solver sharing of port 0 with port 1 is not possible.

4.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

4.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.top.frame_buffer
<suppressed ~6 debug messages>

4.26. Executing TECHMAP pass (map to technology primitives).

4.26.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

4.26.2. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

4.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.27. Executing ICE40_BRAMINIT pass.

4.28. Executing OPT pass (performing simple optimizations).

4.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~99 debug messages>

4.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

4.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$3712 ($dffe) from module top (D = $flatten\top.\uart_rx.$procmux$1120_Y, Q = \top.uart_rx.r_Bit_Index, rval = 3'000).

4.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 178 unused wires.
<suppressed ~3 debug messages>

4.28.5. Rerunning OPT passes. (Removed registers in this run.)

4.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

4.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.28.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4255 ($sdffce) from module top (D = $auto$wreduce.cc:455:run$3766 [2:0], Q = \top.uart_rx.r_Bit_Index, rval = 3'000).

4.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

4.28.10. Rerunning OPT passes. (Removed registers in this run.)

4.28.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.28.13. Executing OPT_DFF pass (perform DFF optimizations).

4.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.28.15. Finished fast OPT passes.

4.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \top.frame_buffer in module \top:
  created 16 $dff cells and 0 static cells of width 16.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 316 write mux blocks.

4.30. Executing OPT pass (performing simple optimizations).

4.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~76 debug messages>

4.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:273:consolidate_wr_by_addr$4101: \rst_delayed -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~324 debug messages>

4.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $auto$memory_share.cc:273:consolidate_wr_by_addr$3997:
      Old ports: A=3'111, B=3'000, Y=$auto$rtlil.cc:2496:Mux$3998
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2496:Mux$3998 [0]
      New connections: $auto$rtlil.cc:2496:Mux$3998 [2:1] = { $auto$rtlil.cc:2496:Mux$3998 [0] $auto$rtlil.cc:2496:Mux$3998 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_share.cc:273:consolidate_wr_by_addr$4013:
      Old ports: A=5'11111, B=5'00000, Y=$auto$rtlil.cc:2496:Mux$4014
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2496:Mux$4014 [0]
      New connections: $auto$rtlil.cc:2496:Mux$4014 [4:1] = { $auto$rtlil.cc:2496:Mux$4014 [0] $auto$rtlil.cc:2496:Mux$4014 [0] $auto$rtlil.cc:2496:Mux$4014 [0] $auto$rtlil.cc:2496:Mux$4014 [0] }
    Consolidated identical input bits for $mux cell $auto$share.cc:718:make_supercell$3780:
      Old ports: A={ 1'0 \top.col_cnt [2:0] }, B={ 1'1 \top.col_cnt [2:0] }, Y=$auto$rtlil.cc:2496:Mux$3781
      New ports: A=1'0, B=1'1, Y=$auto$rtlil.cc:2496:Mux$3781 [3]
      New connections: $auto$rtlil.cc:2496:Mux$3781 [2:0] = \top.col_cnt [2:0]
    Consolidated identical input bits for $mux cell $flatten\top.\uart_rx.$procmux$1063:
      Old ports: A=3'011, B=3'100, Y=$flatten\top.\uart_rx.$procmux$1063_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\top.\uart_rx.$procmux$1063_Y [2] $flatten\top.\uart_rx.$procmux$1063_Y [0] }
      New connections: $flatten\top.\uart_rx.$procmux$1063_Y [1] = $flatten\top.\uart_rx.$procmux$1063_Y [0]
    Consolidated identical input bits for $mux cell $flatten\top.\uart_rx.$procmux$1076:
      Old ports: A=2'10, B=2'00, Y=$flatten\top.\uart_rx.$procmux$1076_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\top.\uart_rx.$procmux$1076_Y [1]
      New connections: $flatten\top.\uart_rx.$procmux$1076_Y [0] = 1'0
  Optimizing cells in module \top.
Performed a total of 5 changes.

4.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.30.6. Executing OPT_DFF pass (perform DFF optimizations).

4.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 107 unused wires.
<suppressed ~1 debug messages>

4.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.30.9. Rerunning OPT passes. (Maybe there is more to do..)

4.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~324 debug messages>

4.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][15]$y$5219, Q = \top.frame_buffer[9] [15]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][14]$y$5215, Q = \top.frame_buffer[9] [14]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][13]$y$5211, Q = \top.frame_buffer[9] [13]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][12]$y$5207, Q = \top.frame_buffer[9] [12]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][11]$y$5203, Q = \top.frame_buffer[9] [11]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][10]$y$5199, Q = \top.frame_buffer[9] [10]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][9]$y$5195, Q = \top.frame_buffer[9] [9]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][0]$y$5159, Q = \top.frame_buffer[9] [0]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][1]$y$5163, Q = \top.frame_buffer[9] [1]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][2]$y$5167, Q = \top.frame_buffer[9] [2]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][3]$y$5171, Q = \top.frame_buffer[9] [3]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][4]$y$5175, Q = \top.frame_buffer[9] [4]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][5]$y$5179, Q = \top.frame_buffer[9] [5]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][6]$y$5183, Q = \top.frame_buffer[9] [6]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][7]$y$5187, Q = \top.frame_buffer[9] [7]).
Adding EN signal on $memory\top.frame_buffer[9]$4277 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[9][2][8]$y$5191, Q = \top.frame_buffer[9] [8]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][0]$y$5085, Q = \top.frame_buffer[8] [0]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][1]$y$5089, Q = \top.frame_buffer[8] [1]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][2]$y$5093, Q = \top.frame_buffer[8] [2]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][3]$y$5097, Q = \top.frame_buffer[8] [3]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][4]$y$5101, Q = \top.frame_buffer[8] [4]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][5]$y$5105, Q = \top.frame_buffer[8] [5]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][6]$y$5109, Q = \top.frame_buffer[8] [6]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][7]$y$5113, Q = \top.frame_buffer[8] [7]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][8]$y$5117, Q = \top.frame_buffer[8] [8]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][9]$y$5121, Q = \top.frame_buffer[8] [9]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][10]$y$5125, Q = \top.frame_buffer[8] [10]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][11]$y$5129, Q = \top.frame_buffer[8] [11]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][12]$y$5133, Q = \top.frame_buffer[8] [12]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][13]$y$5137, Q = \top.frame_buffer[8] [13]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][14]$y$5141, Q = \top.frame_buffer[8] [14]).
Adding EN signal on $memory\top.frame_buffer[8]$4275 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[8][2][15]$y$5145, Q = \top.frame_buffer[8] [15]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][13]$y$5059, Q = \top.frame_buffer[7] [13]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][12]$y$5055, Q = \top.frame_buffer[7] [12]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][9]$y$5043, Q = \top.frame_buffer[7] [9]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][1]$y$5011, Q = \top.frame_buffer[7] [1]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][10]$y$5047, Q = \top.frame_buffer[7] [10]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][11]$y$5051, Q = \top.frame_buffer[7] [11]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][14]$y$5063, Q = \top.frame_buffer[7] [14]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][15]$y$5067, Q = \top.frame_buffer[7] [15]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][8]$y$5039, Q = \top.frame_buffer[7] [8]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][0]$y$5007, Q = \top.frame_buffer[7] [0]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][2]$y$5015, Q = \top.frame_buffer[7] [2]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][3]$y$5019, Q = \top.frame_buffer[7] [3]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][4]$y$5023, Q = \top.frame_buffer[7] [4]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][5]$y$5027, Q = \top.frame_buffer[7] [5]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][6]$y$5031, Q = \top.frame_buffer[7] [6]).
Adding EN signal on $memory\top.frame_buffer[7]$4273 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[7][2][7]$y$5035, Q = \top.frame_buffer[7] [7]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][1]$y$4921, Q = \top.frame_buffer[6] [1]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][2]$y$4925, Q = \top.frame_buffer[6] [2]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][3]$y$4929, Q = \top.frame_buffer[6] [3]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][4]$y$4933, Q = \top.frame_buffer[6] [4]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][5]$y$4937, Q = \top.frame_buffer[6] [5]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][9]$y$4953, Q = \top.frame_buffer[6] [9]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][11]$y$4961, Q = \top.frame_buffer[6] [11]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][0]$y$4917, Q = \top.frame_buffer[6] [0]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][6]$y$4941, Q = \top.frame_buffer[6] [6]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][7]$y$4945, Q = \top.frame_buffer[6] [7]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][8]$y$4949, Q = \top.frame_buffer[6] [8]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][10]$y$4957, Q = \top.frame_buffer[6] [10]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][12]$y$4965, Q = \top.frame_buffer[6] [12]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][13]$y$4969, Q = \top.frame_buffer[6] [13]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][14]$y$4973, Q = \top.frame_buffer[6] [14]).
Adding EN signal on $memory\top.frame_buffer[6]$4271 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[6][2][15]$y$4977, Q = \top.frame_buffer[6] [15]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][1]$y$4823, Q = \top.frame_buffer[5] [1]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][10]$y$4859, Q = \top.frame_buffer[5] [10]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][0]$y$4819, Q = \top.frame_buffer[5] [0]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][2]$y$4827, Q = \top.frame_buffer[5] [2]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][3]$y$4831, Q = \top.frame_buffer[5] [3]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][4]$y$4835, Q = \top.frame_buffer[5] [4]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][5]$y$4839, Q = \top.frame_buffer[5] [5]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][6]$y$4843, Q = \top.frame_buffer[5] [6]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][7]$y$4847, Q = \top.frame_buffer[5] [7]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][8]$y$4851, Q = \top.frame_buffer[5] [8]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][9]$y$4855, Q = \top.frame_buffer[5] [9]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][11]$y$4863, Q = \top.frame_buffer[5] [11]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][12]$y$4867, Q = \top.frame_buffer[5] [12]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][13]$y$4871, Q = \top.frame_buffer[5] [13]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][14]$y$4875, Q = \top.frame_buffer[5] [14]).
Adding EN signal on $memory\top.frame_buffer[5]$4269 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[5][2][15]$y$4879, Q = \top.frame_buffer[5] [15]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][0]$y$4729, Q = \top.frame_buffer[4] [0]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][1]$y$4733, Q = \top.frame_buffer[4] [1]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][2]$y$4737, Q = \top.frame_buffer[4] [2]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][3]$y$4741, Q = \top.frame_buffer[4] [3]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][4]$y$4745, Q = \top.frame_buffer[4] [4]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][5]$y$4749, Q = \top.frame_buffer[4] [5]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][6]$y$4753, Q = \top.frame_buffer[4] [6]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][15]$y$4789, Q = \top.frame_buffer[4] [15]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][7]$y$4757, Q = \top.frame_buffer[4] [7]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][8]$y$4761, Q = \top.frame_buffer[4] [8]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][9]$y$4765, Q = \top.frame_buffer[4] [9]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][10]$y$4769, Q = \top.frame_buffer[4] [10]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][12]$y$4777, Q = \top.frame_buffer[4] [12]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][11]$y$4773, Q = \top.frame_buffer[4] [11]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][13]$y$4781, Q = \top.frame_buffer[4] [13]).
Adding EN signal on $memory\top.frame_buffer[4]$4267 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[4][2][14]$y$4785, Q = \top.frame_buffer[4] [14]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][13]$y$4703, Q = \top.frame_buffer[3] [13]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][11]$y$4695, Q = \top.frame_buffer[3] [11]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][10]$y$4691, Q = \top.frame_buffer[3] [10]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][9]$y$4687, Q = \top.frame_buffer[3] [9]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][15]$y$4711, Q = \top.frame_buffer[3] [15]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][14]$y$4707, Q = \top.frame_buffer[3] [14]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][12]$y$4699, Q = \top.frame_buffer[3] [12]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][8]$y$4683, Q = \top.frame_buffer[3] [8]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][7]$y$4679, Q = \top.frame_buffer[3] [7]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][6]$y$4675, Q = \top.frame_buffer[3] [6]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][5]$y$4671, Q = \top.frame_buffer[3] [5]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][4]$y$4667, Q = \top.frame_buffer[3] [4]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][3]$y$4663, Q = \top.frame_buffer[3] [3]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][2]$y$4659, Q = \top.frame_buffer[3] [2]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][1]$y$4655, Q = \top.frame_buffer[3] [1]).
Adding EN signal on $memory\top.frame_buffer[3]$4265 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[3][2][0]$y$4651, Q = \top.frame_buffer[3] [0]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][13]$y$4611, Q = \top.frame_buffer[2] [13]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][9]$y$4595, Q = \top.frame_buffer[2] [9]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][11]$y$4603, Q = \top.frame_buffer[2] [11]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][12]$y$4607, Q = \top.frame_buffer[2] [12]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][5]$y$4579, Q = \top.frame_buffer[2] [5]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][4]$y$4575, Q = \top.frame_buffer[2] [4]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][3]$y$4571, Q = \top.frame_buffer[2] [3]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][2]$y$4567, Q = \top.frame_buffer[2] [2]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][10]$y$4599, Q = \top.frame_buffer[2] [10]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][8]$y$4591, Q = \top.frame_buffer[2] [8]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][0]$y$4559, Q = \top.frame_buffer[2] [0]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][15]$y$4619, Q = \top.frame_buffer[2] [15]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][1]$y$4563, Q = \top.frame_buffer[2] [1]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][14]$y$4615, Q = \top.frame_buffer[2] [14]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][6]$y$4583, Q = \top.frame_buffer[2] [6]).
Adding EN signal on $memory\top.frame_buffer[2]$4263 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[2][2][7]$y$4587, Q = \top.frame_buffer[2] [7]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][7]$y$4485, Q = \top.frame_buffer[1] [7]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][9]$y$4493, Q = \top.frame_buffer[1] [9]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][12]$y$4505, Q = \top.frame_buffer[1] [12]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][8]$y$4489, Q = \top.frame_buffer[1] [8]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][2]$y$4465, Q = \top.frame_buffer[1] [2]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][3]$y$4469, Q = \top.frame_buffer[1] [3]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][13]$y$4509, Q = \top.frame_buffer[1] [13]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][4]$y$4473, Q = \top.frame_buffer[1] [4]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][5]$y$4477, Q = \top.frame_buffer[1] [5]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][15]$y$4517, Q = \top.frame_buffer[1] [15]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][14]$y$4513, Q = \top.frame_buffer[1] [14]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][11]$y$4501, Q = \top.frame_buffer[1] [11]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][0]$y$4457, Q = \top.frame_buffer[1] [0]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][10]$y$4497, Q = \top.frame_buffer[1] [10]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][6]$y$4481, Q = \top.frame_buffer[1] [6]).
Adding EN signal on $memory\top.frame_buffer[1]$4261 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[1][2][1]$y$4461, Q = \top.frame_buffer[1] [1]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][15]$y$5665, Q = \top.frame_buffer[15] [15]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][14]$y$5661, Q = \top.frame_buffer[15] [14]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][13]$y$5657, Q = \top.frame_buffer[15] [13]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][12]$y$5653, Q = \top.frame_buffer[15] [12]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][11]$y$5649, Q = \top.frame_buffer[15] [11]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][10]$y$5645, Q = \top.frame_buffer[15] [10]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][9]$y$5641, Q = \top.frame_buffer[15] [9]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][8]$y$5637, Q = \top.frame_buffer[15] [8]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][7]$y$5633, Q = \top.frame_buffer[15] [7]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][6]$y$5629, Q = \top.frame_buffer[15] [6]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][5]$y$5625, Q = \top.frame_buffer[15] [5]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][4]$y$5621, Q = \top.frame_buffer[15] [4]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][3]$y$5617, Q = \top.frame_buffer[15] [3]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][2]$y$5613, Q = \top.frame_buffer[15] [2]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][1]$y$5609, Q = \top.frame_buffer[15] [1]).
Adding EN signal on $memory\top.frame_buffer[15]$4289 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[15][2][0]$y$5605, Q = \top.frame_buffer[15] [0]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][15]$y$5591, Q = \top.frame_buffer[14] [15]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][14]$y$5587, Q = \top.frame_buffer[14] [14]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][13]$y$5583, Q = \top.frame_buffer[14] [13]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][12]$y$5579, Q = \top.frame_buffer[14] [12]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][11]$y$5575, Q = \top.frame_buffer[14] [11]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][10]$y$5571, Q = \top.frame_buffer[14] [10]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][9]$y$5567, Q = \top.frame_buffer[14] [9]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][8]$y$5563, Q = \top.frame_buffer[14] [8]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][7]$y$5559, Q = \top.frame_buffer[14] [7]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][6]$y$5555, Q = \top.frame_buffer[14] [6]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][5]$y$5551, Q = \top.frame_buffer[14] [5]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][4]$y$5547, Q = \top.frame_buffer[14] [4]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][3]$y$5543, Q = \top.frame_buffer[14] [3]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][2]$y$5539, Q = \top.frame_buffer[14] [2]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][1]$y$5535, Q = \top.frame_buffer[14] [1]).
Adding EN signal on $memory\top.frame_buffer[14]$4287 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[14][2][0]$y$5531, Q = \top.frame_buffer[14] [0]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][15]$y$5517, Q = \top.frame_buffer[13] [15]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][14]$y$5513, Q = \top.frame_buffer[13] [14]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][13]$y$5509, Q = \top.frame_buffer[13] [13]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][12]$y$5505, Q = \top.frame_buffer[13] [12]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][11]$y$5501, Q = \top.frame_buffer[13] [11]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][10]$y$5497, Q = \top.frame_buffer[13] [10]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][9]$y$5493, Q = \top.frame_buffer[13] [9]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][8]$y$5489, Q = \top.frame_buffer[13] [8]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][7]$y$5485, Q = \top.frame_buffer[13] [7]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][6]$y$5481, Q = \top.frame_buffer[13] [6]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][5]$y$5477, Q = \top.frame_buffer[13] [5]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][4]$y$5473, Q = \top.frame_buffer[13] [4]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][3]$y$5469, Q = \top.frame_buffer[13] [3]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][2]$y$5465, Q = \top.frame_buffer[13] [2]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][1]$y$5461, Q = \top.frame_buffer[13] [1]).
Adding EN signal on $memory\top.frame_buffer[13]$4285 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[13][2][0]$y$5457, Q = \top.frame_buffer[13] [0]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][15]$y$5443, Q = \top.frame_buffer[12] [15]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][14]$y$5439, Q = \top.frame_buffer[12] [14]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][13]$y$5435, Q = \top.frame_buffer[12] [13]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][12]$y$5431, Q = \top.frame_buffer[12] [12]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][11]$y$5427, Q = \top.frame_buffer[12] [11]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][10]$y$5423, Q = \top.frame_buffer[12] [10]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][9]$y$5419, Q = \top.frame_buffer[12] [9]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][8]$y$5415, Q = \top.frame_buffer[12] [8]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][7]$y$5411, Q = \top.frame_buffer[12] [7]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][6]$y$5407, Q = \top.frame_buffer[12] [6]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][5]$y$5403, Q = \top.frame_buffer[12] [5]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][4]$y$5399, Q = \top.frame_buffer[12] [4]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][3]$y$5395, Q = \top.frame_buffer[12] [3]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][2]$y$5391, Q = \top.frame_buffer[12] [2]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][1]$y$5387, Q = \top.frame_buffer[12] [1]).
Adding EN signal on $memory\top.frame_buffer[12]$4283 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[12][2][0]$y$5383, Q = \top.frame_buffer[12] [0]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][15]$y$5367, Q = \top.frame_buffer[11] [15]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][14]$y$5363, Q = \top.frame_buffer[11] [14]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][13]$y$5359, Q = \top.frame_buffer[11] [13]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][12]$y$5355, Q = \top.frame_buffer[11] [12]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][11]$y$5351, Q = \top.frame_buffer[11] [11]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][10]$y$5347, Q = \top.frame_buffer[11] [10]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][9]$y$5343, Q = \top.frame_buffer[11] [9]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][8]$y$5339, Q = \top.frame_buffer[11] [8]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][7]$y$5335, Q = \top.frame_buffer[11] [7]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][6]$y$5331, Q = \top.frame_buffer[11] [6]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][5]$y$5327, Q = \top.frame_buffer[11] [5]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][4]$y$5323, Q = \top.frame_buffer[11] [4]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][3]$y$5319, Q = \top.frame_buffer[11] [3]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][2]$y$5315, Q = \top.frame_buffer[11] [2]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][1]$y$5311, Q = \top.frame_buffer[11] [1]).
Adding EN signal on $memory\top.frame_buffer[11]$4281 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[11][2][0]$y$5307, Q = \top.frame_buffer[11] [0]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][15]$y$5293, Q = \top.frame_buffer[10] [15]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][14]$y$5289, Q = \top.frame_buffer[10] [14]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][13]$y$5285, Q = \top.frame_buffer[10] [13]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][12]$y$5281, Q = \top.frame_buffer[10] [12]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][11]$y$5277, Q = \top.frame_buffer[10] [11]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][10]$y$5273, Q = \top.frame_buffer[10] [10]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][9]$y$5269, Q = \top.frame_buffer[10] [9]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][8]$y$5265, Q = \top.frame_buffer[10] [8]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][7]$y$5261, Q = \top.frame_buffer[10] [7]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][6]$y$5257, Q = \top.frame_buffer[10] [6]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][5]$y$5253, Q = \top.frame_buffer[10] [5]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][4]$y$5249, Q = \top.frame_buffer[10] [4]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][3]$y$5245, Q = \top.frame_buffer[10] [3]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][2]$y$5241, Q = \top.frame_buffer[10] [2]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][1]$y$5237, Q = \top.frame_buffer[10] [1]).
Adding EN signal on $memory\top.frame_buffer[10]$4279 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[10][2][0]$y$5233, Q = \top.frame_buffer[10] [0]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][15]$y$4423, Q = \top.frame_buffer[0] [15]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][14]$y$4419, Q = \top.frame_buffer[0] [14]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][8]$y$4395, Q = \top.frame_buffer[0] [8]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][7]$y$4391, Q = \top.frame_buffer[0] [7]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][6]$y$4387, Q = \top.frame_buffer[0] [6]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][5]$y$4383, Q = \top.frame_buffer[0] [5]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][0]$y$4363, Q = \top.frame_buffer[0] [0]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][13]$y$4415, Q = \top.frame_buffer[0] [13]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][12]$y$4411, Q = \top.frame_buffer[0] [12]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][11]$y$4407, Q = \top.frame_buffer[0] [11]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][10]$y$4403, Q = \top.frame_buffer[0] [10]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][9]$y$4399, Q = \top.frame_buffer[0] [9]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][1]$y$4367, Q = \top.frame_buffer[0] [1]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][2]$y$4371, Q = \top.frame_buffer[0] [2]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][3]$y$4375, Q = \top.frame_buffer[0] [3]).
Adding EN signal on $memory\top.frame_buffer[0]$4259 ($dff) from module top (D = $memory\top.frame_buffer$wrmux[0][2][4]$y$4379, Q = \top.frame_buffer[0] [4]).

4.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~256 debug messages>

4.30.16. Rerunning OPT passes. (Maybe there is more to do..)

4.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~324 debug messages>

4.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[0][0][0]$4340:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[0][0][0]$y$4341
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0]
      New connections: $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [15:1] = { $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] $memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[10][1][0]$5226:
      Old ports: A=16'x, B={ 2'00 $auto$rtlil.cc:2496:Mux$4102 1'0 $auto$rtlil.cc:2496:Mux$4102 1'0 $auto$rtlil.cc:2496:Mux$4102 3'000 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y=$memory\top.frame_buffer$wrmux[10][1][0]$y$5227
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y=$memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1:0]
      New connections: $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [15:2] = { $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1:0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1:0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1:0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [0] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1] $memory\top.frame_buffer$wrmux[10][1][0]$y$5227 [1] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[11][1][0]$5300:
      Old ports: A=16'x, B={ 2'00 $auto$rtlil.cc:2496:Mux$4102 1'0 $auto$rtlil.cc:2496:Mux$4102 1'0 $auto$rtlil.cc:2496:Mux$4102 7'0000000 $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y=$memory\top.frame_buffer$wrmux[11][1][0]$y$5301
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y=$memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [1:0]
      New connections: $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [15:2] = { $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [1:0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [1:0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [1:0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] $memory\top.frame_buffer$wrmux[11][1][0]$y$5301 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[12][1][0]$5374:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[12][1][0]$y$5375
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0]
      New connections: $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [15:1] = { $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] $memory\top.frame_buffer$wrmux[12][1][0]$y$5375 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[13][1][0]$5450:
      Old ports: A=16'x, B={ 3'000 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 10'0000000000 }, Y=$memory\top.frame_buffer$wrmux[13][1][0]$y$5451
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y={ $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [10] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] }
      New connections: { $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [15:11] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [9:1] } = { $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [10] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [10] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] $memory\top.frame_buffer$wrmux[13][1][0]$y$5451 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[14][1][0]$5524:
      Old ports: A=16'x, B={ 2'00 $auto$rtlil.cc:2496:Mux$4102 3'000 $auto$rtlil.cc:2496:Mux$4102 9'000000000 }, Y=$memory\top.frame_buffer$wrmux[14][1][0]$y$5525
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y={ $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [9] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] }
      New connections: { $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [15:10] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [8:1] } = { $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [9] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] $memory\top.frame_buffer$wrmux[14][1][0]$y$5525 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[15][1][0]$5598:
      Old ports: A=16'x, B={ 3'000 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 $auto$rtlil.cc:2496:Mux$4102 10'0000000000 }, Y=$memory\top.frame_buffer$wrmux[15][1][0]$y$5599
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$4102 1'0 }, Y={ $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [10] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] }
      New connections: { $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [15:11] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [9:1] } = { $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [10] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [10] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] $memory\top.frame_buffer$wrmux[15][1][0]$y$5599 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[1][0][0]$4426:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0]
      New connections: $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [15:1] = { $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] $memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[2][0][0]$4520:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0]
      New connections: $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [15:1] = { $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] $memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[3][0][0]$4622:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0]
      New connections: $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [15:1] = { $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] $memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[4][0][0]$4714:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[4][0][0]$y$4715
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0]
      New connections: $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [15:1] = { $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] $memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[5][0][0]$4792:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0]
      New connections: $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [15:1] = { $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] $memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[6][0][0]$4882:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0]
      New connections: $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [15:1] = { $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] $memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[7][0][0]$4980:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0]
      New connections: $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [15:1] = { $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] $memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[8][0][0]$5070:
      Old ports: A=16'x, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[8][0][0]$y$5071
      New ports: A=1'x, B=1'0, Y=$memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0]
      New connections: $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [15:1] = { $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] $memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[9][1][0]$5152:
      Old ports: A=16'x, B={ 3'000 $auto$rtlil.cc:2496:Mux$3874 1'0 $auto$rtlil.cc:2496:Mux$3874 8'00000000 $auto$rtlil.cc:2496:Mux$3874 1'0 }, Y=$memory\top.frame_buffer$wrmux[9][1][0]$y$5153
      New ports: A=2'x, B={ $auto$rtlil.cc:2496:Mux$3874 1'0 }, Y=$memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [1:0]
      New connections: $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [15:2] = { $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [1:0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [1:0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] $memory\top.frame_buffer$wrmux[9][1][0]$y$5153 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[0][1][0]$4344:
      Old ports: A=$memory\top.frame_buffer$wrmux[0][0][0]$y$4341, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[0][1][0]$y$4345
      New ports: A=$memory\top.frame_buffer$wrmux[0][0][0]$y$4341 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0]
      New connections: $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [15:1] = { $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] $memory\top.frame_buffer$wrmux[0][1][0]$y$4345 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[1][1][0]$4430:
      Old ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [8:0], B=9'000000000, Y=$memory\top.frame_buffer$wrmux[1][1][0]$y$4431
      New ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0]
      New connections: $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [8:1] = { $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] $memory\top.frame_buffer$wrmux[1][1][0]$y$4431 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[1][1][10]$4438:
      Old ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [11:10], B=2'00, Y=$memory\top.frame_buffer$wrmux[1][1][10]$y$4439
      New ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[1][1][10]$y$4439 [0]
      New connections: $memory\top.frame_buffer$wrmux[1][1][10]$y$4439 [1] = $memory\top.frame_buffer$wrmux[1][1][10]$y$4439 [0]
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[1][1][13]$4446:
      Old ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [15:13], B=3'000, Y=$memory\top.frame_buffer$wrmux[1][1][13]$y$4447
      New ports: A=$memory\top.frame_buffer$wrmux[1][0][0]$y$4427 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[1][1][13]$y$4447 [0]
      New connections: $memory\top.frame_buffer$wrmux[1][1][13]$y$4447 [2:1] = { $memory\top.frame_buffer$wrmux[1][1][13]$y$4447 [0] $memory\top.frame_buffer$wrmux[1][1][13]$y$4447 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[2][1][0]$4524:
      Old ports: A=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [8:0], B=9'000000000, Y=$memory\top.frame_buffer$wrmux[2][1][0]$y$4525
      New ports: A=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0]
      New connections: $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [8:1] = { $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] $memory\top.frame_buffer$wrmux[2][1][0]$y$4525 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[2][1][14]$4548:
      Old ports: A=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [15:14], B=2'00, Y=$memory\top.frame_buffer$wrmux[2][1][14]$y$4549
      New ports: A=$memory\top.frame_buffer$wrmux[2][0][0]$y$4521 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[2][1][14]$y$4549 [0]
      New connections: $memory\top.frame_buffer$wrmux[2][1][14]$y$4549 [1] = $memory\top.frame_buffer$wrmux[2][1][14]$y$4549 [0]
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[3][1][0]$4626:
      Old ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [8:0], B=9'000000000, Y=$memory\top.frame_buffer$wrmux[3][1][0]$y$4627
      New ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0]
      New connections: $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [8:1] = { $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] $memory\top.frame_buffer$wrmux[3][1][0]$y$4627 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[3][1][14]$4642:
      Old ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [15:14], B=2'00, Y=$memory\top.frame_buffer$wrmux[3][1][14]$y$4643
      New ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[3][1][14]$y$4643 [0]
      New connections: $memory\top.frame_buffer$wrmux[3][1][14]$y$4643 [1] = $memory\top.frame_buffer$wrmux[3][1][14]$y$4643 [0]
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[3][1][9]$4630:
      Old ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [11:9], B={ $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 }, Y=$memory\top.frame_buffer$wrmux[3][1][9]$y$4631
      New ports: A=$memory\top.frame_buffer$wrmux[3][0][0]$y$4623 [0], B=$auto$rtlil.cc:2496:Mux$3978, Y=$memory\top.frame_buffer$wrmux[3][1][9]$y$4631 [0]
      New connections: $memory\top.frame_buffer$wrmux[3][1][9]$y$4631 [2:1] = { $memory\top.frame_buffer$wrmux[3][1][9]$y$4631 [0] $memory\top.frame_buffer$wrmux[3][1][9]$y$4631 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[4][1][0]$4718:
      Old ports: A=$memory\top.frame_buffer$wrmux[4][0][0]$y$4715, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[4][1][0]$y$4719
      New ports: A=$memory\top.frame_buffer$wrmux[4][0][0]$y$4715 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0]
      New connections: $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [15:1] = { $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] $memory\top.frame_buffer$wrmux[4][1][0]$y$4719 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[5][1][11]$4812:
      Old ports: A=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [15:11], B=5'00000, Y=$memory\top.frame_buffer$wrmux[5][1][11]$y$4813
      New ports: A=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [0]
      New connections: $memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [4:1] = { $memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [0] $memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [0] $memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [0] $memory\top.frame_buffer$wrmux[5][1][11]$y$4813 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[5][1][2]$4804:
      Old ports: A=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [9:2], B=8'00000000, Y=$memory\top.frame_buffer$wrmux[5][1][2]$y$4805
      New ports: A=$memory\top.frame_buffer$wrmux[5][0][0]$y$4793 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0]
      New connections: $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [7:1] = { $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] $memory\top.frame_buffer$wrmux[5][1][2]$y$4805 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[6][1][12]$4910:
      Old ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [15:12], B=4'0000, Y=$memory\top.frame_buffer$wrmux[6][1][12]$y$4911
      New ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[6][1][12]$y$4911 [0]
      New connections: $memory\top.frame_buffer$wrmux[6][1][12]$y$4911 [3:1] = { $memory\top.frame_buffer$wrmux[6][1][12]$y$4911 [0] $memory\top.frame_buffer$wrmux[6][1][12]$y$4911 [0] $memory\top.frame_buffer$wrmux[6][1][12]$y$4911 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[6][1][1]$4890:
      Old ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [5:1], B={ $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 }, Y=$memory\top.frame_buffer$wrmux[6][1][1]$y$4891
      New ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0], B=$auto$rtlil.cc:2496:Mux$3978, Y=$memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [0]
      New connections: $memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [4:1] = { $memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [0] $memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [0] $memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [0] $memory\top.frame_buffer$wrmux[6][1][1]$y$4891 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[6][1][6]$4894:
      Old ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [8:6], B=3'000, Y=$memory\top.frame_buffer$wrmux[6][1][6]$y$4895
      New ports: A=$memory\top.frame_buffer$wrmux[6][0][0]$y$4883 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[6][1][6]$y$4895 [0]
      New connections: $memory\top.frame_buffer$wrmux[6][1][6]$y$4895 [2:1] = { $memory\top.frame_buffer$wrmux[6][1][6]$y$4895 [0] $memory\top.frame_buffer$wrmux[6][1][6]$y$4895 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[7][1][14]$5000:
      Old ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [15:14], B=2'00, Y=$memory\top.frame_buffer$wrmux[7][1][14]$y$5001
      New ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[7][1][14]$y$5001 [0]
      New connections: $memory\top.frame_buffer$wrmux[7][1][14]$y$5001 [1] = $memory\top.frame_buffer$wrmux[7][1][14]$y$5001 [0]
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[7][1][2]$4992:
      Old ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [8:2], B=7'0000000, Y=$memory\top.frame_buffer$wrmux[7][1][2]$y$4993
      New ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0]
      New connections: $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [6:1] = { $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] $memory\top.frame_buffer$wrmux[7][1][2]$y$4993 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[7][1][9]$4996:
      Old ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [13:9], B={ $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 $auto$rtlil.cc:2496:Mux$3978 }, Y=$memory\top.frame_buffer$wrmux[7][1][9]$y$4997
      New ports: A=$memory\top.frame_buffer$wrmux[7][0][0]$y$4981 [0], B=$auto$rtlil.cc:2496:Mux$3978, Y=$memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [0]
      New connections: $memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [4:1] = { $memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [0] $memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [0] $memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [0] $memory\top.frame_buffer$wrmux[7][1][9]$y$4997 [0] }
    Consolidated identical input bits for $mux cell $memory\top.frame_buffer$wrmux[8][1][0]$5074:
      Old ports: A=$memory\top.frame_buffer$wrmux[8][0][0]$y$5071, B=16'0000000000000000, Y=$memory\top.frame_buffer$wrmux[8][1][0]$y$5075
      New ports: A=$memory\top.frame_buffer$wrmux[8][0][0]$y$5071 [0], B=1'0, Y=$memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0]
      New connections: $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [15:1] = { $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] $memory\top.frame_buffer$wrmux[8][1][0]$y$5075 [0] }
  Optimizing cells in module \top.
Performed a total of 35 changes.

4.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~141 debug messages>
Removed a total of 47 cells.

4.30.20. Executing OPT_DFF pass (perform DFF optimizations).

4.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 47 unused wires.
<suppressed ~1 debug messages>

4.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.30.23. Rerunning OPT passes. (Maybe there is more to do..)

4.30.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~296 debug messages>

4.30.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.30.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.30.27. Executing OPT_DFF pass (perform DFF optimizations).

4.30.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.30.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.30.30. Finished OPT passes. (There is nothing left to do.)

4.31. Executing ICE40_WRAPCARRY pass (wrap carries).

4.32. Executing TECHMAP pass (map to technology primitives).

4.32.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.32.2. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.32.3. Continuing TECHMAP pass.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $lut.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:385d1a4945c795cc898e2ec282bc59023ba4044d$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$117a422dd91271f31dcbd629d7b52dc0eb1e49ab\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:53f81d327ce76cbf6a8a98434119a90a4847620f$paramod$21dee603dc19e4530a14795556c80eafcc4f26b8\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:104da9d1db7a1a3d3040fc47e9181bb90c2db772$paramod$21dee603dc19e4530a14795556c80eafcc4f26b8\_90_shift_shiftx'.

4.32.20. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:104da9d1db7a1a3d3040fc47e9181bb90c2db772$paramod$21dee603dc19e4530a14795556c80eafcc4f26b8\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$8430.
    dead port 2/2 on $mux $procmux$8424.
    dead port 2/2 on $mux $procmux$8418.
    dead port 2/2 on $mux $procmux$8412.
Removed 4 multiplexer ports.
<suppressed ~1471 debug messages>

4.32.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:104da9d1db7a1a3d3040fc47e9181bb90c2db772$paramod$21dee603dc19e4530a14795556c80eafcc4f26b8\_90_shift_shiftx.
<suppressed ~29 debug messages>
Removed 0 unused cells and 9 unused wires.
Using template $paramod$constmap:104da9d1db7a1a3d3040fc47e9181bb90c2db772$paramod$21dee603dc19e4530a14795556c80eafcc4f26b8\_90_shift_shiftx for cells of type $shift.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_80_ice40_alu for cells of type $alu.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
Creating constmapped module `$paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr'.

4.32.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~461 debug messages>

4.32.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~99 debug messages>
Removed 0 unused cells and 9 unused wires.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$constmap:7919341049723cf48d33f6062e2ed30bf4c4700c$paramod$a20618b6ecd000f34ae5f14d04e2b68665a3cc5c\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:f27dc7d0b4d89fa231d5949d188ad757ae26e91e$paramod$6465477439c5cd1adbda955e729648a5331fd7bc\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$5bb6c3f3e4a5303115f41a182fad517280ea0b25\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:6021badb6d4ef00c0f43954514a4882aa55c2fe5$paramod$d58ccac68160361153112e4a788e8357cfad81d4\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:09da5ed01a27b580928d7012e600e59ac7ba3d40$paramod$c0048527f9fff4824d141b2d656ae0dd9ce8dfe5\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~992 debug messages>

4.33. Executing OPT pass (performing simple optimizations).

4.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~615 debug messages>

4.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1023 debug messages>
Removed a total of 341 cells.

4.33.3. Executing OPT_DFF pass (perform DFF optimizations).

4.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 76 unused cells and 962 unused wires.
<suppressed ~77 debug messages>

4.33.5. Finished fast OPT passes.

4.34. Executing ICE40_OPT pass (performing simple optimizations).

4.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3790.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3790.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3801.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3801.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3812.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3801.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3823.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3801.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3834.slice[0].carry: CO=\rst_delay_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3837.slice[0].carry: CO=\top.col_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3843.slice[0].carry: CO=\top.col_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3846.slice[0].carry: CO=\top.uart_rx.r_Bit_Index [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3849.slice[0].carry: CO=\top.uart_rx.r_Clock_Count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3846.X [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[15].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[16].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [16]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[17].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [17]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[18].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[19].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [19]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[20].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[21].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [21]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[22].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [22]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[23].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[24].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [24]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[25].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [25]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[26].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [26]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[27].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [27]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[28].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [28]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[29].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [29]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[30].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [30]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[31].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [31]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3852.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$3852.C [9]

4.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

4.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

4.34.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$9389 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[9] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9348 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[7] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9284 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[9] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9273 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[9] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9265 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[7] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9260 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[7] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9245 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[9] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9185 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[7] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9148 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[8] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9123 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[9] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9122 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[7] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9081 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[9] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9080 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[7] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9073 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[9] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9072 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[7] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8948 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[15] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8939 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[8] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8931 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[9] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8893 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[8] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8890 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[7] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8889 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[8] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8791 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[6] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8768 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[8] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8701 ($_DFF_P_) from module top (D = $flatten\top.\uart_rx.$procmux$1065.B_AND_S [2], Q = \top.uart_rx.r_SM_Main [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8700 ($_DFF_P_) from module top (D = $flatten\top.\uart_rx.$procmux$1065.Y_B [1], Q = \top.uart_rx.r_SM_Main [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8699 ($_DFF_P_) from module top (D = $flatten\top.\uart_rx.$procmux$1065.Y_B [0], Q = \top.uart_rx.r_SM_Main [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8690 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[8] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8689 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [7], Q = \top.uart_rx.r_Clock_Count [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8688 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [6], Q = \top.uart_rx.r_Clock_Count [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8687 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [5], Q = \top.uart_rx.r_Clock_Count [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8686 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [4], Q = \top.uart_rx.r_Clock_Count [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8685 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [3], Q = \top.uart_rx.r_Clock_Count [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8684 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [2], Q = \top.uart_rx.r_Clock_Count [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8683 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [1], Q = \top.uart_rx.r_Clock_Count [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8682 ($_DFFE_PP_) from module top (D = $flatten\top.\uart_rx.$procmux$1130.Y_B [0], Q = \top.uart_rx.r_Clock_Count [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8649 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[6] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8643 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[8] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8334 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[7] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8291 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[7] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8284 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[9] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8206 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[8] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8192 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[8] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7827 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[6] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7826 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[8] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7825 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[8] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7803 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[6] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7789 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[9] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7748 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[9] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7727 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[6] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7709 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[8] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7700 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[0] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7695 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[10] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7692 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[6] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7669 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[11] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7658 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[12] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7642 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[13] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7640 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[8] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7633 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[14] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7621 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[9] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7531 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[8] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7528 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[8] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7475 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[6] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7470 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[8] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7465 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[6] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7445 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[5] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7424 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[5] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7414 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[5] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7409 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[5] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7408 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[6] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7401 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[5] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7395 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[5] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7388 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[5] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7382 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[5] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7374 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[5] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7368 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[5] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7361 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[5] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7355 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[5] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7348 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[5] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7342 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[5] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7330 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7324 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7317 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7311 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7304 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7297 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7289 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[4] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7283 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7276 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[4] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7271 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[4] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7266 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[4] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7261 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[4] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7256 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[4] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7251 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[4] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7246 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[4] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7222 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[3] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7217 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[3] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7212 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[3] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7207 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[3] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7202 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7197 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7192 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7187 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7182 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7177 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7172 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7167 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7148 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[2] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7143 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7138 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7133 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7128 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7123 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[2] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7118 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[2] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7113 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7108 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[2] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7103 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7098 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[2] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7093 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7088 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7069 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[1] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7064 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7059 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7054 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[1] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7049 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7044 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7039 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [15], Q = \top.frame_buffer[1] [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7034 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[1] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7029 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[1] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7024 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7019 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[1] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7014 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7009 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7002 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[15] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6999 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[15] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6987 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[15] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6984 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[15] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6981 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[15] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6978 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[15] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6975 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[15] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6972 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[15] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6969 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[15] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6966 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[15] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6963 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[15] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6960 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[15] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6955 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[14] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6949 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[14] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6946 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[14] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6943 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[14] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6937 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[14] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6934 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[14] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6931 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[14] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6928 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[14] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6925 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[14] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6922 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[14] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6919 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[14] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6916 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[14] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6913 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[14] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6908 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[13] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6905 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[13] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6869 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[13] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6866 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[13] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6863 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[13] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6860 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[13] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6857 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[13] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6854 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[13] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6851 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[13] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6848 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[13] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6845 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[13] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6842 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[13] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6837 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[12] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6834 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[12] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6831 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[12] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6828 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[12] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6825 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[12] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6822 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[12] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6819 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[12] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6816 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[12] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6813 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[12] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6810 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[12] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6807 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[12] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6804 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[12] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6801 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[12] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6798 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[12] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6795 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[12] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6790 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[11] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6784 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[11] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6778 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[11] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6772 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[11] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6769 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[11] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6766 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[11] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6763 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[11] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6760 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[11] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6757 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[11] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6754 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[11] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6748 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[11] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6743 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[10] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6737 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[10] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6731 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[10] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6725 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[10] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6722 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[10] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6719 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[10] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6701 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[10] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6694 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [14], Q = \top.frame_buffer[0] [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6689 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[0] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6684 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6679 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [6], Q = \top.frame_buffer[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6674 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [5], Q = \top.frame_buffer[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6669 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6664 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [13], Q = \top.frame_buffer[0] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6659 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [12], Q = \top.frame_buffer[0] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6654 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [11], Q = \top.frame_buffer[0] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6649 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [10], Q = \top.frame_buffer[0] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6644 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [9], Q = \top.frame_buffer[0] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6639 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [1], Q = \top.frame_buffer[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6634 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [2], Q = \top.frame_buffer[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6629 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [3], Q = \top.frame_buffer[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6624 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [4], Q = \top.frame_buffer[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6575 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [8], Q = \top.frame_buffer[9] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6568 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [7], Q = \top.frame_buffer[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6534 ($_DFFE_PP_) from module top (D = $auto$share.cc:667:make_supercell$3774.Y [0], Q = \top.frame_buffer[4] [0], rval = 1'0).

4.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 222 unused cells and 242 unused wires.
<suppressed ~223 debug messages>

4.34.6. Rerunning OPT passes. (Removed registers in this run.)

4.34.7. Running ICE40 specific optimizations.

4.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~30 debug messages>

4.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.34.10. Executing OPT_DFF pass (perform DFF optimizations).

4.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

4.34.12. Rerunning OPT passes. (Removed registers in this run.)

4.34.13. Running ICE40 specific optimizations.

4.34.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.34.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.34.16. Executing OPT_DFF pass (perform DFF optimizations).

4.34.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.34.18. Finished OPT passes. (There is nothing left to do.)

4.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.36. Executing TECHMAP pass (map to technology primitives).

4.36.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~349 debug messages>

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

4.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3834.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3837.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3843.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3846.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3849.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3852.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3852.slice[10].carry ($lut).

4.39. Executing ICE40_OPT pass (performing simple optimizations).

4.39.1. Running ICE40 specific optimizations.

4.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~287 debug messages>

4.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

4.39.4. Executing OPT_DFF pass (perform DFF optimizations).

4.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1979 unused wires.
<suppressed ~3 debug messages>

4.39.6. Rerunning OPT passes. (Removed registers in this run.)

4.39.7. Running ICE40 specific optimizations.

4.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.39.10. Executing OPT_DFF pass (perform DFF optimizations).

4.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.39.12. Finished OPT passes. (There is nothing left to do.)

4.40. Executing TECHMAP pass (map to technology primitives).

4.40.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.41. Executing ABC pass (technology mapping using ABC).

4.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1681 gates and 2016 wires to a netlist network with 333 inputs and 610 outputs.

4.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     781.
ABC: Participating nodes from both networks       =    1805.
ABC: Participating nodes from the first network   =     782. (  86.03 % of nodes)
ABC: Participating nodes from the second network  =    1023. ( 112.54 % of nodes)
ABC: Node pairs (any polarity)                    =     780. (  85.81 % of names can be moved)
ABC: Node pairs (same polarity)                   =     687. (  75.58 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

4.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      908
ABC RESULTS:        internal signals:     1073
ABC RESULTS:           input signals:      333
ABC RESULTS:          output signals:      610
Removing temp directory.

4.42. Executing ICE40_WRAPCARRY pass (wrap carries).

4.43. Executing TECHMAP pass (map to technology primitives).

4.43.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 26 unused cells and 1494 unused wires.

4.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      943
  1-LUT               22
  2-LUT              471
  3-LUT              204
  4-LUT              246
  with \SB_CARRY    (#0)   31
  with \SB_CARRY    (#1)   33

Eliminating LUTs.
Number of LUTs:      943
  1-LUT               22
  2-LUT              471
  3-LUT              204
  4-LUT              246
  with \SB_CARRY    (#0)   31
  with \SB_CARRY    (#1)   33

Combining LUTs.
Number of LUTs:      935
  1-LUT               22
  2-LUT              462
  3-LUT              199
  4-LUT              252
  with \SB_CARRY    (#0)   31
  with \SB_CARRY    (#1)   33

Eliminated 0 LUTs.
Combined 8 LUTs.
<suppressed ~3922 debug messages>

4.45. Executing TECHMAP pass (map to technology primitives).

4.45.1. Executing Verilog-2005 frontend: /home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/tom/bin/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$b27efe94af524608e2c158786bdf6c13e4c8b578\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$ad823946862e656cf7f96d606b18b8f972dc6d6c\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$b4d59a169df3392cc49f75ff3f36786eb368b5e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$89add7395f09a7f1d31ba23a20843f5b8e155407\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$8c5b7259c9d9cd17395950154a06a8b3c48fdd5f\$lut for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$d151c38cd9b2f723ca2e7bae80e30ea6d32d7878\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
No more expansions possible.
<suppressed ~1848 debug messages>
Removed 0 unused cells and 2008 unused wires.

4.46. Executing AUTONAME pass.
Renamed 17938 objects in module top (53 iterations).
<suppressed ~2062 debug messages>

4.47. Executing HIERARCHY pass (managing design hierarchy).

4.47.1. Analyzing design hierarchy..
Top module:  \top

4.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

4.48. Printing statistics.

=== top ===

   Number of wires:                842
   Number of wire bits:           2048
   Number of public wires:         842
   Number of public wire bits:    2048
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1314
     SB_CARRY                       52
     SB_DFF                         11
     SB_DFFE                        56
     SB_DFFESR                     244
     SB_DFFESS                      11
     SB_DFFSR                        4
     SB_DFFSS                        1
     SB_LUT4                       935

4.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

4.50. Executing JSON backend.

Warnings: 11 unique messages, 11 total
End of script. Logfile hash: 420b1b70d7, CPU: user 2.03s system 0.01s, MEM: 37.05 MB peak
Yosys 0.27+22 (git sha1 53c0a6b78, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 21% 1x abc (0 sec), 18% 45x opt_expr (0 sec), ...
